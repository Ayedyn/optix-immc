//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31057947
// Cuda compilation tools, release 11.6, V11.6.124
// Based on NVVM 7.0.1
//

.version 7.6
.target sm_52
.address_size 64

	// .globl	__raygen__rg
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.const .align 16 .b8 gcfg[64144];
.global .align 1 .b8 $str[8] = {82, 65, 89, 71, 69, 78, 10, 0};
.global .align 1 .b8 $str$1[5] = {72, 73, 84, 10, 0};

.visible .entry __raygen__rg()
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<24>;
	.reg .b32 	%r<185>;
	.reg .b64 	%rd<42>;


	// begin inline asm
	call (%r58), _optix_get_launch_index_x, ();
	// end inline asm
	mov.u64 	%rd11, $str;
	cvta.global.u64 	%rd12, %rd11;
	mov.u64 	%rd13, 0;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd12;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd13;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r61, [retval0+0];
	} // callseq 0
	ld.const.u64 	%rd14, [gcfg+8];
	cvta.to.global.u64 	%rd15, %rd14;
	mul.wide.s32 	%rd16, %r58, 16;
	add.s64 	%rd17, %rd15, %rd16;
	ld.global.v4.u32 	{%r62, %r63, %r170, %r171}, [%rd17];
	mov.b64 	%rd18, {%r62, %r63};
	mov.b64 	%rd1, {%r170, %r171};
	shl.b64 	%rd19, %rd18, 23;
	xor.b64  	%rd20, %rd19, %rd18;
	shr.u64 	%rd21, %rd20, 18;
	shr.u64 	%rd22, %rd1, 5;
	xor.b64  	%rd23, %rd22, %rd1;
	xor.b64  	%rd24, %rd23, %rd20;
	xor.b64  	%rd39, %rd24, %rd21;
	ld.const.v2.u32 	{%r66, %r67}, [gcfg+136];
	setp.lt.u32 	%p1, %r58, %r67;
	selp.u32 	%r70, 1, 0, %p1;
	add.s32 	%r5, %r66, %r70;
	setp.lt.s32 	%p2, %r5, 1;
	@%p2 bra 	$L__BB0_5;

	ld.const.u64 	%rd3, [gcfg];
	ld.const.u32 	%r8, [gcfg+124];
	add.s64 	%rd25, %rd39, %rd1;
	cvt.u32.u64 	%r74, %rd25;
	mov.u32 	%r73, 0;
	shr.u32 	%r75, %r74, 9;
	or.b32  	%r76, %r75, 1065353216;
	mov.u32 	%r167, 1065353216;
	mov.b32 	%f2, %r76;
	add.ftz.f32 	%f3, %f2, 0fBF800000;
	add.ftz.f32 	%f4, %f3, 0f34000000;
	lg2.approx.ftz.f32 	%f5, %f4;
	mul.ftz.f32 	%f6, %f5, 0fBF317218;
	mov.b32 	%r166, %f6;
	ld.const.v2.u32 	{%r77, %r78}, [gcfg+48];
	ld.const.u32 	%r12, [gcfg+44];
	ld.const.v4.u32 	{%r79, %r80, %r81, %r82}, [gcfg+32];
	ld.const.f32 	%f1, [gcfg+104];
	mov.f32 	%f15, 0f00000000;
	mov.u32 	%r184, %r73;
	mov.u32 	%r160, %r79;
	mov.u32 	%r161, %r80;
	mov.u32 	%r162, %r81;
	mov.u32 	%r163, %r12;
	mov.u32 	%r164, %r77;
	mov.u32 	%r165, %r78;
	mov.u32 	%r168, %r73;
	mov.u32 	%r169, %r8;
	mov.u64 	%rd38, %rd3;

$L__BB0_2:
	mul.wide.u32 	%rd27, %r169, 16;
	mov.u64 	%rd28, gcfg;
	add.s64 	%rd29, %rd28, %rd27;
	ld.const.f32 	%f16, [%rd29+148];
	mov.b32 	%f17, %r166;
	div.approx.ftz.f32 	%f14, %f17, %f16;
	mov.b64 	{%r134, %r135}, %rd39;
	mov.u32 	%r119, 1;
	mov.b64 	{%r137, %r136}, %rd38;
	mov.b32 	%f12, %r165;
	mov.b32 	%f11, %r164;
	mov.b32 	%f10, %r163;
	mov.b32 	%f9, %r162;
	mov.b32 	%f8, %r161;
	mov.b32 	%f7, %r160;
	mov.u32 	%r116, 255;
	mov.u32 	%r117, 32;
	mov.u32 	%r121, 16;
	// begin inline asm
	call(%r160,%r161,%r162,%r163,%r164,%r165,%r166,%r167,%r168,%r169,%r170,%r171,%r95,%r96,%r97,%r98,%r99,%r100,%r101,%r102,%r103,%r104,%r105,%r106,%r107,%r108,%r109,%r110,%r111,%r112,%r113,%r114),_optix_trace_typed_32,(%r73,%rd38,%f7,%f8,%f9,%f10,%f11,%f12,%f15,%f14,%f15,%r116,%r117,%r73,%r119,%r73,%r121,%r160,%r161,%r162,%r163,%r164,%r165,%r166,%r167,%r168,%r169,%r170,%r171,%r134,%r135,%r136,%r137,%r73,%r73,%r73,%r73,%r73,%r73,%r73,%r73,%r73,%r73,%r73,%r73,%r73,%r73,%r73,%r73);
	// end inline asm
	mov.b64 	%rd39, {%r95, %r96};
	mov.b64 	%rd38, {%r98, %r97};
	setp.ne.s32 	%p3, %r169, 0;
	mov.b32 	%f18, %r168;
	setp.gt.ftz.f32 	%p4, %f1, %f18;
	and.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_4;

	mov.b64 	%rd30, {%r170, %r171};
	shl.b64 	%rd31, %rd30, 23;
	xor.b64  	%rd32, %rd31, %rd30;
	shr.u64 	%rd33, %rd32, 18;
	shr.u64 	%rd34, %rd39, 5;
	xor.b64  	%rd35, %rd34, %rd39;
	xor.b64  	%rd36, %rd35, %rd32;
	xor.b64  	%rd8, %rd36, %rd33;
	add.s64 	%rd37, %rd8, %rd39;
	cvt.u32.u64 	%r156, %rd37;
	mov.u32 	%r168, 0;
	shr.u32 	%r157, %r156, 9;
	or.b32  	%r158, %r157, 1065353216;
	mov.u32 	%r167, 1065353216;
	mov.b32 	%f19, %r158;
	add.ftz.f32 	%f20, %f19, 0fBF800000;
	add.ftz.f32 	%f21, %f20, 0f34000000;
	lg2.approx.ftz.f32 	%f22, %f21;
	mul.ftz.f32 	%f23, %f22, 0fBF317218;
	mov.b32 	%r166, %f23;
	add.s32 	%r184, %r184, 1;
	mov.u64 	%rd39, %rd8;
	mov.u32 	%r170, %r95;
	mov.u32 	%r171, %r96;
	mov.u64 	%rd38, %rd3;
	mov.u32 	%r169, %r8;
	mov.u32 	%r165, %r78;
	mov.u32 	%r164, %r77;
	mov.u32 	%r163, %r12;
	mov.u32 	%r162, %r81;
	mov.u32 	%r161, %r80;
	mov.u32 	%r160, %r79;

$L__BB0_4:
	setp.lt.s32 	%p6, %r184, %r5;
	@%p6 bra 	$L__BB0_2;

$L__BB0_5:
	ret;

}
	// .globl	__closesthit__ch
.visible .entry __closesthit__ch()
{
	.reg .pred 	%p<38>;
	.reg .f32 	%f<301>;
	.reg .b32 	%r<214>;
	.reg .b64 	%rd<75>;


	mov.u32 	%r190, 0;
	// begin inline asm
	call (%r58), _optix_get_payload, (%r190);
	// end inline asm
	mov.b32 	%f1, %r58;
	mov.u32 	%r61, 1;
	// begin inline asm
	call (%r60), _optix_get_payload, (%r61);
	// end inline asm
	mov.b32 	%f2, %r60;
	mov.u32 	%r63, 2;
	// begin inline asm
	call (%r62), _optix_get_payload, (%r63);
	// end inline asm
	mov.b32 	%f3, %r62;
	mov.u32 	%r65, 3;
	// begin inline asm
	call (%r64), _optix_get_payload, (%r65);
	// end inline asm
	mov.b32 	%f297, %r64;
	mov.u32 	%r67, 4;
	// begin inline asm
	call (%r66), _optix_get_payload, (%r67);
	// end inline asm
	mov.b32 	%f296, %r66;
	mov.u32 	%r69, 5;
	// begin inline asm
	call (%r68), _optix_get_payload, (%r69);
	// end inline asm
	mov.b32 	%f295, %r68;
	mov.u32 	%r71, 6;
	// begin inline asm
	call (%r70), _optix_get_payload, (%r71);
	// end inline asm
	mov.b32 	%f7, %r70;
	mov.u32 	%r73, 7;
	// begin inline asm
	call (%r72), _optix_get_payload, (%r73);
	// end inline asm
	mov.b32 	%f8, %r72;
	mov.u32 	%r75, 8;
	// begin inline asm
	call (%r74), _optix_get_payload, (%r75);
	// end inline asm
	mov.b32 	%f9, %r74;
	mov.u32 	%r77, 9;
	// begin inline asm
	call (%r76), _optix_get_payload, (%r77);
	// end inline asm
	mov.u32 	%r79, 14;
	// begin inline asm
	call (%r78), _optix_get_payload, (%r79);
	// end inline asm
	cvt.u64.u32 	%rd21, %r78;
	mov.u32 	%r81, 15;
	// begin inline asm
	call (%r80), _optix_get_payload, (%r81);
	// end inline asm
	cvt.u64.u32 	%rd22, %r80;
	bfi.b64 	%rd1, %rd21, %rd22, 32, 32;
	mov.u32 	%r83, 10;
	// begin inline asm
	call (%r207), _optix_get_payload, (%r83);
	// end inline asm
	mov.u32 	%r85, 11;
	// begin inline asm
	call (%r208), _optix_get_payload, (%r85);
	// end inline asm
	mov.u32 	%r87, 12;
	mov.u32 	%r89, 13;
	// begin inline asm
	call (%r86), _optix_get_payload, (%r87);
	// end inline asm
	// begin inline asm
	call (%r88), _optix_get_payload, (%r89);
	// end inline asm
	// begin inline asm
	call (%f112), _optix_get_ray_tmax, ();
	// end inline asm
	mul.wide.u32 	%rd23, %r76, 16;
	mov.u64 	%rd24, gcfg;
	add.s64 	%rd25, %rd24, %rd23;
	ld.const.v4.f32 	{%f113, %f114, %f115, %f116}, [%rd25+144];
	ld.const.f32 	%f17, [gcfg+96];
	mul.ftz.f32 	%f117, %f112, %f17;
	cvt.rzi.ftz.s32.f32 	%r90, %f117;
	shl.b32 	%r192, %r90, 1;
	add.s32 	%r91, %r192, 2;
	cvt.rn.f32.s32 	%f118, %r91;
	div.approx.ftz.f32 	%f18, %f112, %f118;
	mul.ftz.f32 	%f119, %f113, %f18;
	mul.ftz.f32 	%f120, %f119, 0fBFB8AA3B;
	ex2.approx.ftz.f32 	%f19, %f120;
	ld.const.u32 	%r92, [gcfg+132];
	setp.eq.s32 	%p2, %r92, 2;
	@%p2 bra 	$L__BB1_3;
	bra.uni 	$L__BB1_1;

$L__BB1_3:
	mov.f32 	%f125, 0f3F800000;
	sub.ftz.f32 	%f126, %f125, %f19;
	mul.ftz.f32 	%f281, %f126, %f8;
	bra.uni 	$L__BB1_4;

$L__BB1_1:
	setp.eq.ftz.f32 	%p3, %f113, 0f00000000;
	mov.f32 	%f281, 0f00000000;
	@%p3 bra 	$L__BB1_4;

	mov.f32 	%f122, 0f3F800000;
	sub.ftz.f32 	%f123, %f122, %f19;
	mul.ftz.f32 	%f124, %f123, %f8;
	div.approx.ftz.f32 	%f281, %f124, %f113;

$L__BB1_4:
	ld.const.v2.f32 	{%f127, %f128}, [gcfg+56];
	sub.ftz.f32 	%f131, %f1, %f127;
	sub.ftz.f32 	%f132, %f2, %f128;
	ld.const.f32 	%f133, [gcfg+64];
	sub.ftz.f32 	%f134, %f3, %f133;
	mul.ftz.f32 	%f23, %f18, %f297;
	mul.ftz.f32 	%f24, %f18, %f296;
	mul.ftz.f32 	%f25, %f18, %f295;
	fma.rn.ftz.f32 	%f284, %f23, 0f3F000000, %f131;
	fma.rn.ftz.f32 	%f283, %f24, 0f3F000000, %f132;
	fma.rn.ftz.f32 	%f282, %f25, 0f3F000000, %f134;
	mul.ftz.f32 	%f135, %f18, 0f2C6AB991;
	mul.ftz.f32 	%f29, %f116, %f135;
	add.ftz.f32 	%f285, %f29, %f9;
	ld.const.f32 	%f31, [gcfg+100];
	ld.const.f32 	%f32, [gcfg+108];
	ld.const.u32 	%r94, [gcfg+120];
	add.s32 	%r7, %r94, -1;
	ld.const.u32 	%r8, [gcfg+88];
	setp.leu.ftz.f32 	%p4, %f284, 0f00000000;
	mov.u32 	%r188, %r190;
	@%p4 bra 	$L__BB1_6;

	ld.const.f32 	%f136, [gcfg+68];
	min.ftz.f32 	%f137, %f284, %f136;
	mul.ftz.f32 	%f138, %f137, %f17;
	cvt.rmi.ftz.s32.f32 	%r188, %f138;

$L__BB1_6:
	setp.leu.ftz.f32 	%p5, %f283, 0f00000000;
	mov.u32 	%r189, %r190;
	@%p5 bra 	$L__BB1_8;

	ld.const.f32 	%f139, [gcfg+72];
	min.ftz.f32 	%f140, %f283, %f139;
	mul.ftz.f32 	%f141, %f140, %f17;
	cvt.rmi.ftz.s32.f32 	%r189, %f141;

$L__BB1_8:
	setp.leu.ftz.f32 	%p6, %f282, 0f00000000;
	@%p6 bra 	$L__BB1_10;

	ld.const.f32 	%f142, [gcfg+76];
	min.ftz.f32 	%f143, %f282, %f142;
	mul.ftz.f32 	%f144, %f143, %f17;
	cvt.rmi.ftz.s32.f32 	%r190, %f144;

$L__BB1_10:
	sub.ftz.f32 	%f145, %f285, %f31;
	mul.ftz.f32 	%f146, %f145, %f32;
	cvt.rzi.ftz.s32.f32 	%r97, %f146;
	ld.const.v2.u32 	{%r98, %r99}, [gcfg+80];
	min.s32 	%r100, %r97, %r7;
	mad.lo.s32 	%r101, %r100, %r8, %r188;
	mad.lo.s32 	%r102, %r99, %r190, %r101;
	mad.lo.s32 	%r200, %r98, %r189, %r102;
	setp.gt.s32 	%p7, %r91, 1;
	@%p7 bra 	$L__BB1_12;
	bra.uni 	$L__BB1_11;

$L__BB1_12:
	ld.const.f32 	%f33, [gcfg+68];
	ld.const.v2.f32 	{%f147, %f148}, [gcfg+72];
	ld.const.u64 	%rd4, [gcfg+16];
	cvta.to.global.u64 	%rd5, %rd4;
	ld.const.u32 	%r18, [gcfg+92];
	setp.eq.s32 	%p8, %r192, 0;
	mov.f32 	%f279, %f281;
	@%p8 bra 	$L__BB1_37;

	mov.u32 	%r104, 0;
	mov.f32 	%f279, %f281;

$L__BB1_14:
	add.ftz.f32 	%f42, %f24, %f283;
	add.ftz.f32 	%f43, %f25, %f282;
	add.ftz.f32 	%f44, %f29, %f285;
	add.ftz.f32 	%f45, %f23, %f284;
	setp.leu.ftz.f32 	%p9, %f45, 0f00000000;
	mov.u32 	%r193, %r104;
	@%p9 bra 	$L__BB1_16;

	min.ftz.f32 	%f149, %f45, %f33;
	mul.ftz.f32 	%f150, %f149, %f17;
	cvt.rmi.ftz.s32.f32 	%r193, %f150;

$L__BB1_16:
	setp.leu.ftz.f32 	%p10, %f42, 0f00000000;
	mov.u32 	%r194, %r104;
	@%p10 bra 	$L__BB1_18;

	min.ftz.f32 	%f151, %f42, %f147;
	mul.ftz.f32 	%f152, %f151, %f17;
	cvt.rmi.ftz.s32.f32 	%r194, %f152;

$L__BB1_18:
	setp.leu.ftz.f32 	%p11, %f43, 0f00000000;
	mov.u32 	%r195, %r104;
	@%p11 bra 	$L__BB1_20;

	min.ftz.f32 	%f153, %f43, %f148;
	mul.ftz.f32 	%f154, %f153, %f17;
	cvt.rmi.ftz.s32.f32 	%r195, %f154;

$L__BB1_20:
	sub.ftz.f32 	%f155, %f44, %f31;
	mul.ftz.f32 	%f156, %f155, %f32;
	cvt.rzi.ftz.s32.f32 	%r107, %f156;
	min.s32 	%r108, %r107, %r7;
	mad.lo.s32 	%r109, %r108, %r8, %r193;
	mad.lo.s32 	%r110, %r99, %r195, %r109;
	mad.lo.s32 	%r27, %r98, %r194, %r110;
	setp.eq.s32 	%p12, %r27, %r200;
	mov.u32 	%r196, %r200;
	@%p12 bra 	$L__BB1_25;

	mov.f32 	%f266, 0f00000000;
	mul.wide.u32 	%rd26, %r200, 4;
	add.s64 	%rd6, %rd5, %rd26;
	atom.global.add.f32 	%f46, [%rd6], %f279;
	setp.leu.ftz.f32 	%p13, %f46, 0f447A0000;
	mov.f32 	%f279, %f266;
	mov.u32 	%r196, %r27;
	@%p13 bra 	$L__BB1_25;

	neg.ftz.f32 	%f158, %f46;
	atom.global.add.f32 	%f159, [%rd6], %f158;
	setp.lt.ftz.f32 	%p14, %f159, 0f00000000;
	@%p14 bra 	$L__BB1_24;
	bra.uni 	$L__BB1_23;

$L__BB1_24:
	mul.wide.u32 	%rd67, %r200, 4;
	add.s64 	%rd66, %rd5, %rd67;
	mov.f32 	%f279, 0f00000000;
	atom.global.add.f32 	%f163, [%rd66], %f46;
	mov.u32 	%r196, %r27;
	bra.uni 	$L__BB1_25;

$L__BB1_23:
	mov.f32 	%f279, 0f00000000;
	add.s32 	%r111, %r18, %r200;
	mul.wide.u32 	%rd27, %r111, 4;
	add.s64 	%rd28, %rd5, %rd27;
	atom.global.add.f32 	%f161, [%rd28], %f46;
	mov.u32 	%r196, %r27;

$L__BB1_25:
	mul.ftz.f32 	%f164, %f19, %f281;
	add.ftz.f32 	%f280, %f164, %f279;
	mul.ftz.f32 	%f281, %f19, %f164;
	add.ftz.f32 	%f283, %f24, %f42;
	add.ftz.f32 	%f282, %f25, %f43;
	add.ftz.f32 	%f285, %f29, %f44;
	add.ftz.f32 	%f284, %f23, %f45;
	setp.leu.ftz.f32 	%p15, %f284, 0f00000000;
	mov.u32 	%r197, 0;
	@%p15 bra 	$L__BB1_27;

	min.ftz.f32 	%f165, %f284, %f33;
	mul.ftz.f32 	%f166, %f165, %f17;
	cvt.rmi.ftz.s32.f32 	%r197, %f166;

$L__BB1_27:
	mov.u32 	%r198, 0;
	setp.leu.ftz.f32 	%p16, %f283, 0f00000000;
	@%p16 bra 	$L__BB1_29;

	min.ftz.f32 	%f167, %f283, %f147;
	mul.ftz.f32 	%f168, %f167, %f17;
	cvt.rmi.ftz.s32.f32 	%r198, %f168;

$L__BB1_29:
	mov.u32 	%r199, 0;
	setp.leu.ftz.f32 	%p17, %f282, 0f00000000;
	@%p17 bra 	$L__BB1_31;

	min.ftz.f32 	%f169, %f282, %f148;
	mul.ftz.f32 	%f170, %f169, %f17;
	cvt.rmi.ftz.s32.f32 	%r199, %f170;

$L__BB1_31:
	sub.ftz.f32 	%f171, %f285, %f31;
	mul.ftz.f32 	%f172, %f171, %f32;
	cvt.rzi.ftz.s32.f32 	%r115, %f172;
	min.s32 	%r116, %r115, %r7;
	mad.lo.s32 	%r117, %r116, %r8, %r197;
	mad.lo.s32 	%r118, %r99, %r199, %r117;
	mad.lo.s32 	%r35, %r98, %r198, %r118;
	setp.eq.s32 	%p18, %r35, %r196;
	mov.u32 	%r200, %r196;
	@%p18 bra 	$L__BB1_36;

	mov.f32 	%f269, 0f00000000;
	mul.wide.u32 	%rd29, %r196, 4;
	add.s64 	%rd7, %rd5, %rd29;
	atom.global.add.f32 	%f54, [%rd7], %f280;
	setp.leu.ftz.f32 	%p19, %f54, 0f447A0000;
	mov.f32 	%f280, %f269;
	mov.u32 	%r200, %r35;
	@%p19 bra 	$L__BB1_36;

	neg.ftz.f32 	%f174, %f54;
	atom.global.add.f32 	%f175, [%rd7], %f174;
	setp.lt.ftz.f32 	%p20, %f175, 0f00000000;
	@%p20 bra 	$L__BB1_35;
	bra.uni 	$L__BB1_34;

$L__BB1_35:
	mul.wide.u32 	%rd69, %r196, 4;
	add.s64 	%rd68, %rd5, %rd69;
	mov.f32 	%f280, 0f00000000;
	atom.global.add.f32 	%f179, [%rd68], %f54;
	mov.u32 	%r200, %r35;
	bra.uni 	$L__BB1_36;

$L__BB1_34:
	mov.f32 	%f280, 0f00000000;
	add.s32 	%r119, %r18, %r196;
	mul.wide.u32 	%rd30, %r119, 4;
	add.s64 	%rd31, %rd5, %rd30;
	atom.global.add.f32 	%f177, [%rd31], %f54;
	mov.u32 	%r200, %r35;

$L__BB1_36:
	add.ftz.f32 	%f279, %f281, %f280;
	add.s32 	%r192, %r192, -2;
	setp.ne.s32 	%p21, %r192, 0;
	@%p21 bra 	$L__BB1_14;

$L__BB1_37:
	mul.ftz.f32 	%f63, %f19, %f281;
	add.ftz.f32 	%f64, %f24, %f283;
	add.ftz.f32 	%f65, %f25, %f282;
	add.ftz.f32 	%f180, %f29, %f285;
	sub.ftz.f32 	%f181, %f180, %f31;
	mul.ftz.f32 	%f182, %f181, %f32;
	cvt.rzi.ftz.s32.f32 	%r121, %f182;
	min.s32 	%r122, %r121, %r7;
	mul.lo.s32 	%r39, %r122, %r8;
	add.ftz.f32 	%f66, %f23, %f284;
	setp.leu.ftz.f32 	%p22, %f66, 0f00000000;
	mov.u32 	%r204, 0;
	mov.u32 	%r202, %r204;
	@%p22 bra 	$L__BB1_39;

	min.ftz.f32 	%f183, %f66, %f33;
	mul.ftz.f32 	%f184, %f183, %f17;
	cvt.rmi.ftz.s32.f32 	%r202, %f184;

$L__BB1_39:
	setp.leu.ftz.f32 	%p23, %f64, 0f00000000;
	mov.u32 	%r203, %r204;
	@%p23 bra 	$L__BB1_41;

	min.ftz.f32 	%f185, %f64, %f147;
	mul.ftz.f32 	%f186, %f185, %f17;
	cvt.rmi.ftz.s32.f32 	%r203, %f186;

$L__BB1_41:
	setp.leu.ftz.f32 	%p24, %f65, 0f00000000;
	@%p24 bra 	$L__BB1_43;

	min.ftz.f32 	%f187, %f65, %f148;
	mul.ftz.f32 	%f188, %f187, %f17;
	cvt.rmi.ftz.s32.f32 	%r204, %f188;

$L__BB1_43:
	add.s32 	%r125, %r202, %r39;
	mad.lo.s32 	%r126, %r99, %r204, %r125;
	mad.lo.s32 	%r46, %r98, %r203, %r126;
	setp.eq.s32 	%p25, %r46, %r200;
	mov.f32 	%f265, 0f00000000;
	mov.u32 	%r205, %r200;
	@%p25 bra 	$L__BB1_48;

	mul.wide.u32 	%rd32, %r200, 4;
	add.s64 	%rd8, %rd5, %rd32;
	atom.global.add.f32 	%f67, [%rd8], %f279;
	setp.leu.ftz.f32 	%p26, %f67, 0f447A0000;
	mov.f32 	%f279, %f265;
	mov.u32 	%r205, %r46;
	@%p26 bra 	$L__BB1_48;

	neg.ftz.f32 	%f190, %f67;
	atom.global.add.f32 	%f191, [%rd8], %f190;
	setp.lt.ftz.f32 	%p27, %f191, 0f00000000;
	@%p27 bra 	$L__BB1_47;
	bra.uni 	$L__BB1_46;

$L__BB1_47:
	atom.global.add.f32 	%f195, [%rd8], %f67;
	mov.f32 	%f279, %f265;
	mov.u32 	%r205, %r46;
	bra.uni 	$L__BB1_48;

$L__BB1_11:
	ld.const.u64 	%rd70, [gcfg+16];
	mov.u32 	%r205, %r200;
	bra.uni 	$L__BB1_49;

$L__BB1_46:
	add.s32 	%r127, %r18, %r200;
	mul.wide.u32 	%rd33, %r127, 4;
	add.s64 	%rd34, %rd5, %rd33;
	atom.global.add.f32 	%f193, [%rd34], %f67;
	mov.f32 	%f279, %f265;
	mov.u32 	%r205, %r46;

$L__BB1_48:
	ld.const.u64 	%rd70, [gcfg+16];
	add.ftz.f32 	%f281, %f63, %f279;

$L__BB1_49:
	cvta.to.global.u64 	%rd10, %rd70;
	mul.wide.u32 	%rd35, %r205, 4;
	add.s64 	%rd11, %rd10, %rd35;
	atom.global.add.f32 	%f71, [%rd11], %f281;
	setp.leu.ftz.f32 	%p28, %f71, 0f447A0000;
	@%p28 bra 	$L__BB1_53;

	neg.ftz.f32 	%f196, %f71;
	atom.global.add.f32 	%f197, [%rd11], %f196;
	setp.lt.ftz.f32 	%p29, %f197, 0f00000000;
	@%p29 bra 	$L__BB1_52;
	bra.uni 	$L__BB1_51;

$L__BB1_52:
	atom.global.add.f32 	%f199, [%rd11], %f71;
	bra.uni 	$L__BB1_53;

$L__BB1_51:
	ld.const.u32 	%r128, [gcfg+92];
	add.s32 	%r129, %r128, %r205;
	mul.wide.u32 	%rd36, %r129, 4;
	add.s64 	%rd37, %rd10, %rd36;
	atom.global.add.f32 	%f198, [%rd37], %f71;

$L__BB1_53:
	add.ftz.f32 	%f200, %f112, 0f38D1B717;
	fma.rn.ftz.f32 	%f300, %f200, %f297, %f1;
	fma.rn.ftz.f32 	%f299, %f200, %f296, %f2;
	fma.rn.ftz.f32 	%f298, %f200, %f295, %f3;
	mul.ftz.f32 	%f201, %f112, %f113;
	mul.ftz.f32 	%f202, %f201, 0fBFB8AA3B;
	ex2.approx.ftz.f32 	%f203, %f202;
	mul.ftz.f32 	%f75, %f203, %f8;
	mul.ftz.f32 	%f204, %f112, 0f2C6AB991;
	fma.rn.ftz.f32 	%f76, %f204, %f116, %f9;
	mul.ftz.f32 	%f205, %f112, %f114;
	sub.ftz.f32 	%f77, %f7, %f205;
	// begin inline asm
	call (%r130), _optix_read_primitive_idx, ();
	// end inline asm
	// begin inline asm
	call (%rd38), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	cvt.s64.s32 	%rd13, %r130;
	ld.u64 	%rd39, [%rd38];
	mul.wide.s32 	%rd40, %r130, 16;
	add.s64 	%rd41, %rd39, %rd40;
	ld.v4.f32 	{%f206, %f207, %f208, %f209}, [%rd41];
	// begin inline asm
	call (%r131), _optix_get_hit_kind, ();
	// end inline asm
	// begin inline asm
	call (%r132), _optix_get_primitive_type_from_hit_kind, (%r131);
	// end inline asm
	setp.ne.s32 	%p30, %r132, 9472;
	@%p30 bra 	$L__BB1_55;

	mov.u64 	%rd42, $str$1;
	cvta.global.u64 	%rd43, %rd42;
	mov.u64 	%rd44, 0;
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd43;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd44;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r134, [retval0+0];
	} // callseq 1

$L__BB1_55:
	mov.b64 	%rd71, {%r86, %r88};
	mov.b32 	%r211, %f209;
	ld.u64 	%rd45, [%rd38+8];
	shl.b64 	%rd46, %rd13, 3;
	add.s64 	%rd47, %rd45, %rd46;
	ld.u64 	%rd74, [%rd47];
	ld.const.u32 	%r135, [gcfg+128];
	setp.eq.s32 	%p31, %r135, 0;
	@%p31 bra 	$L__BB1_62;

	mov.b64 	%rd71, {%r86, %r88};
	mov.u64 	%rd61, gcfg;
	mul.wide.u32 	%rd48, %r211, 16;
	add.s64 	%rd50, %rd61, %rd48;
	ld.const.f32 	%f85, [%rd50+156];
	setp.eq.ftz.f32 	%p32, %f116, %f85;
	@%p32 bra 	$L__BB1_62;

	mov.b64 	%rd71, {%r86, %r88};
	mul.ftz.f32 	%f210, %f207, %f296;
	fma.rn.ftz.f32 	%f211, %f206, %f297, %f210;
	fma.rn.ftz.f32 	%f212, %f208, %f295, %f211;
	abs.ftz.f32 	%f86, %f212;
	mul.ftz.f32 	%f87, %f85, %f85;
	mul.ftz.f32 	%f88, %f116, %f116;
	div.approx.ftz.f32 	%f213, %f88, %f87;
	mul.ftz.f32 	%f214, %f86, %f86;
	mov.f32 	%f215, 0f3F800000;
	sub.ftz.f32 	%f216, %f215, %f214;
	mul.ftz.f32 	%f217, %f213, %f216;
	sub.ftz.f32 	%f89, %f215, %f217;
	setp.leu.ftz.f32 	%p33, %f89, 0f00000000;
	@%p33 bra 	$L__BB1_59;

	mov.b64 	%rd65, {%r86, %r88};
	mov.b64 	%rd51, {%r207, %r208};
	mul.ftz.f32 	%f218, %f88, %f86;
	mul.ftz.f32 	%f219, %f87, %f89;
	fma.rn.ftz.f32 	%f220, %f86, %f218, %f219;
	add.ftz.f32 	%f221, %f116, %f116;
	mul.ftz.f32 	%f222, %f221, %f85;
	mul.ftz.f32 	%f223, %f86, %f222;
	sqrt.approx.ftz.f32 	%f90, %f89;
	mul.ftz.f32 	%f224, %f90, %f223;
	sub.ftz.f32 	%f225, %f220, %f224;
	add.ftz.f32 	%f226, %f220, %f224;
	div.approx.ftz.f32 	%f227, %f225, %f226;
	mul.ftz.f32 	%f228, %f86, %f87;
	mul.ftz.f32 	%f229, %f88, %f90;
	mul.ftz.f32 	%f230, %f90, %f229;
	fma.rn.ftz.f32 	%f231, %f86, %f228, %f230;
	sub.ftz.f32 	%f232, %f231, %f224;
	add.ftz.f32 	%f233, %f231, %f224;
	div.approx.ftz.f32 	%f234, %f232, %f233;
	add.ftz.f32 	%f235, %f227, %f234;
	mul.ftz.f32 	%f236, %f235, 0f3F000000;
	shl.b64 	%rd52, %rd51, 23;
	xor.b64  	%rd53, %rd52, %rd51;
	xor.b64  	%rd54, %rd53, %rd65;
	shr.u64 	%rd55, %rd53, 18;
	xor.b64  	%rd56, %rd54, %rd55;
	shr.u64 	%rd57, %rd65, 5;
	xor.b64  	%rd71, %rd56, %rd57;
	add.s64 	%rd58, %rd71, %rd65;
	cvt.u32.u64 	%r136, %rd58;
	shr.u32 	%r137, %r136, 9;
	or.b32  	%r138, %r137, 1065353216;
	mov.b32 	%f237, %r138;
	add.ftz.f32 	%f238, %f237, 0fBF800000;
	sub.ftz.f32 	%f240, %f215, 0f00000000;
	fma.rn.ftz.f32 	%f241, %f238, %f240, 0f00000000;
	setp.gtu.ftz.f32 	%p34, %f241, %f236;
	mov.u32 	%r207, %r86;
	mov.u32 	%r208, %r88;
	@%p34 bra 	$L__BB1_60;
	bra.uni 	$L__BB1_59;

$L__BB1_60:
	mul.ftz.f32 	%f253, %f206, %f86;
	mul.ftz.f32 	%f254, %f207, %f86;
	mul.ftz.f32 	%f255, %f208, %f86;
	sub.ftz.f32 	%f256, %f297, %f253;
	sub.ftz.f32 	%f257, %f296, %f254;
	sub.ftz.f32 	%f258, %f295, %f255;
	div.approx.ftz.f32 	%f259, %f116, %f85;
	mul.ftz.f32 	%f260, %f256, %f259;
	mul.ftz.f32 	%f261, %f257, %f259;
	mul.ftz.f32 	%f262, %f258, %f259;
	fma.rn.ftz.f32 	%f297, %f206, %f90, %f260;
	fma.rn.ftz.f32 	%f296, %f207, %f90, %f261;
	fma.rn.ftz.f32 	%f295, %f208, %f90, %f262;
	mov.pred 	%p37, -1;
	mov.u32 	%r207, %r86;
	mov.u32 	%r208, %r88;
	bra.uni 	$L__BB1_61;

$L__BB1_59:
	mul.ftz.f32 	%f242, %f86, 0fC0000000;
	mul.ftz.f32 	%f243, %f297, 0f3951B717;
	sub.ftz.f32 	%f300, %f300, %f243;
	mul.ftz.f32 	%f244, %f296, 0f3951B717;
	sub.ftz.f32 	%f299, %f299, %f244;
	mul.ftz.f32 	%f245, %f295, 0f3951B717;
	sub.ftz.f32 	%f298, %f298, %f245;
	fma.rn.ftz.f32 	%f246, %f206, %f242, %f297;
	fma.rn.ftz.f32 	%f247, %f207, %f242, %f296;
	fma.rn.ftz.f32 	%f248, %f208, %f242, %f295;
	mul.ftz.f32 	%f249, %f247, %f247;
	fma.rn.ftz.f32 	%f250, %f246, %f246, %f249;
	fma.rn.ftz.f32 	%f251, %f248, %f248, %f250;
	rsqrt.approx.ftz.f32 	%f252, %f251;
	mul.ftz.f32 	%f297, %f246, %f252;
	mul.ftz.f32 	%f296, %f247, %f252;
	mul.ftz.f32 	%f295, %f248, %f252;
	mov.pred 	%p37, 0;

$L__BB1_61:
	selp.b32 	%r211, %r211, %r76, %p37;
	selp.b64 	%rd74, %rd74, %rd1, %p37;

$L__BB1_62:
	mov.u32 	%r185, 15;
	mov.u32 	%r184, 14;
	mov.u32 	%r183, 9;
	mov.u32 	%r182, 8;
	mov.u32 	%r181, 7;
	mov.u32 	%r180, 6;
	mov.u32 	%r179, 5;
	mov.u32 	%r178, 4;
	mov.u32 	%r177, 3;
	mov.u32 	%r176, 2;
	mov.u32 	%r175, 1;
	mov.u32 	%r174, 13;
	mov.u32 	%r173, 12;
	mov.u32 	%r172, 11;
	mov.u32 	%r171, 10;
	// begin inline asm
	call _optix_set_payload, (%r171, %r208);
	// end inline asm
	mov.u32 	%r147, 0;
	mov.b64 	{%r142, %r144}, %rd71;
	// begin inline asm
	call _optix_set_payload, (%r172, %r142);
	// end inline asm
	// begin inline asm
	call _optix_set_payload, (%r173, %r144);
	// end inline asm
	// begin inline asm
	call _optix_set_payload, (%r174, %r207);
	// end inline asm
	mov.b32 	%r148, %f300;
	// begin inline asm
	call _optix_set_payload, (%r147, %r148);
	// end inline asm
	mov.b32 	%r150, %f299;
	// begin inline asm
	call _optix_set_payload, (%r175, %r150);
	// end inline asm
	mov.b32 	%r152, %f298;
	// begin inline asm
	call _optix_set_payload, (%r176, %r152);
	// end inline asm
	mov.b32 	%r154, %f297;
	// begin inline asm
	call _optix_set_payload, (%r177, %r154);
	// end inline asm
	mov.b32 	%r156, %f296;
	// begin inline asm
	call _optix_set_payload, (%r178, %r156);
	// end inline asm
	mov.b32 	%r158, %f295;
	// begin inline asm
	call _optix_set_payload, (%r179, %r158);
	// end inline asm
	mov.b32 	%r160, %f77;
	// begin inline asm
	call _optix_set_payload, (%r180, %r160);
	// end inline asm
	mov.b32 	%r162, %f75;
	// begin inline asm
	call _optix_set_payload, (%r181, %r162);
	// end inline asm
	mov.b32 	%r164, %f76;
	// begin inline asm
	call _optix_set_payload, (%r182, %r164);
	// end inline asm
	// begin inline asm
	call _optix_set_payload, (%r183, %r211);
	// end inline asm
	shr.u64 	%rd59, %rd74, 32;
	cvt.u32.u64 	%r168, %rd59;
	// begin inline asm
	call _optix_set_payload, (%r184, %r168);
	// end inline asm
	cvt.u32.u64 	%r170, %rd74;
	// begin inline asm
	call _optix_set_payload, (%r185, %r170);
	// end inline asm
	ret;

}
	// .globl	__miss__ms
.visible .entry __miss__ms()
{
	.reg .pred 	%p<36>;
	.reg .f32 	%f<278>;
	.reg .b32 	%r<190>;
	.reg .b64 	%rd<52>;


	mov.u32 	%r173, 0;
	// begin inline asm
	call (%r49), _optix_get_payload, (%r173);
	// end inline asm
	mov.b32 	%f1, %r49;
	mov.u32 	%r52, 1;
	// begin inline asm
	call (%r51), _optix_get_payload, (%r52);
	// end inline asm
	mov.b32 	%f2, %r51;
	mov.u32 	%r54, 2;
	// begin inline asm
	call (%r53), _optix_get_payload, (%r54);
	// end inline asm
	mov.b32 	%f3, %r53;
	mov.u32 	%r56, 3;
	// begin inline asm
	call (%r55), _optix_get_payload, (%r56);
	// end inline asm
	mov.b32 	%f4, %r55;
	mov.u32 	%r58, 4;
	// begin inline asm
	call (%r57), _optix_get_payload, (%r58);
	// end inline asm
	mov.b32 	%f5, %r57;
	mov.u32 	%r60, 5;
	// begin inline asm
	call (%r59), _optix_get_payload, (%r60);
	// end inline asm
	mov.b32 	%f6, %r59;
	mov.u32 	%r62, 6;
	// begin inline asm
	call (%r61), _optix_get_payload, (%r62);
	// end inline asm
	mov.b32 	%f89, %r61;
	mov.u32 	%r64, 7;
	// begin inline asm
	call (%r63), _optix_get_payload, (%r64);
	// end inline asm
	mov.b32 	%f7, %r63;
	mov.u32 	%r66, 8;
	// begin inline asm
	call (%r65), _optix_get_payload, (%r66);
	// end inline asm
	mov.b32 	%f8, %r65;
	mov.u32 	%r68, 9;
	// begin inline asm
	call (%r67), _optix_get_payload, (%r68);
	// end inline asm
	mov.u32 	%r70, 14;
	// begin inline asm
	call (%r69), _optix_get_payload, (%r70);
	// end inline asm
	mov.u32 	%r72, 15;
	// begin inline asm
	call (%r71), _optix_get_payload, (%r72);
	// end inline asm
	mov.u32 	%r74, 10;
	mov.u32 	%r76, 11;
	mov.u32 	%r78, 12;
	// begin inline asm
	call (%r73), _optix_get_payload, (%r74);
	// end inline asm
	// begin inline asm
	call (%r75), _optix_get_payload, (%r76);
	// end inline asm
	// begin inline asm
	call (%r77), _optix_get_payload, (%r78);
	// end inline asm
	mov.u32 	%r80, 13;
	// begin inline asm
	call (%r79), _optix_get_payload, (%r80);
	// end inline asm
	mov.b64 	%rd1, {%r73, %r75};
	mul.wide.u32 	%rd13, %r67, 16;
	mov.u64 	%rd14, gcfg;
	add.s64 	%rd15, %rd14, %rd13;
	ld.const.v4.f32 	{%f90, %f91, %f92, %f93}, [%rd15+144];
	div.approx.ftz.f32 	%f12, %f89, %f91;
	ld.const.f32 	%f13, [gcfg+96];
	mul.ftz.f32 	%f95, %f12, %f13;
	cvt.rzi.ftz.s32.f32 	%r81, %f95;
	shl.b32 	%r175, %r81, 1;
	add.s32 	%r82, %r175, 2;
	cvt.rn.f32.s32 	%f96, %r82;
	div.approx.ftz.f32 	%f14, %f12, %f96;
	mul.ftz.f32 	%f97, %f90, %f14;
	mul.ftz.f32 	%f98, %f97, 0fBFB8AA3B;
	ex2.approx.ftz.f32 	%f15, %f98;
	ld.const.u32 	%r83, [gcfg+132];
	setp.eq.s32 	%p1, %r83, 2;
	@%p1 bra 	$L__BB2_3;
	bra.uni 	$L__BB2_1;

$L__BB2_3:
	mov.f32 	%f103, 0f3F800000;
	sub.ftz.f32 	%f104, %f103, %f15;
	mul.ftz.f32 	%f266, %f104, %f7;
	bra.uni 	$L__BB2_4;

$L__BB2_1:
	setp.eq.ftz.f32 	%p2, %f90, 0f00000000;
	mov.f32 	%f266, 0f00000000;
	@%p2 bra 	$L__BB2_4;

	mov.f32 	%f100, 0f3F800000;
	sub.ftz.f32 	%f101, %f100, %f15;
	mul.ftz.f32 	%f102, %f101, %f7;
	div.approx.ftz.f32 	%f266, %f102, %f90;

$L__BB2_4:
	ld.const.v2.f32 	{%f105, %f106}, [gcfg+56];
	sub.ftz.f32 	%f109, %f1, %f105;
	sub.ftz.f32 	%f110, %f2, %f106;
	ld.const.f32 	%f111, [gcfg+64];
	sub.ftz.f32 	%f112, %f3, %f111;
	mul.ftz.f32 	%f19, %f14, %f4;
	mul.ftz.f32 	%f20, %f14, %f5;
	mul.ftz.f32 	%f21, %f14, %f6;
	fma.rn.ftz.f32 	%f269, %f19, 0f3F000000, %f109;
	fma.rn.ftz.f32 	%f268, %f20, 0f3F000000, %f110;
	fma.rn.ftz.f32 	%f267, %f21, 0f3F000000, %f112;
	mul.ftz.f32 	%f113, %f14, 0f2C6AB991;
	mul.ftz.f32 	%f25, %f93, %f113;
	add.ftz.f32 	%f270, %f25, %f8;
	ld.const.f32 	%f27, [gcfg+100];
	ld.const.f32 	%f28, [gcfg+108];
	ld.const.u32 	%r85, [gcfg+120];
	add.s32 	%r7, %r85, -1;
	ld.const.u32 	%r8, [gcfg+88];
	setp.leu.ftz.f32 	%p3, %f269, 0f00000000;
	mov.u32 	%r171, %r173;
	@%p3 bra 	$L__BB2_6;

	ld.const.f32 	%f114, [gcfg+68];
	min.ftz.f32 	%f115, %f269, %f114;
	mul.ftz.f32 	%f116, %f115, %f13;
	cvt.rmi.ftz.s32.f32 	%r171, %f116;

$L__BB2_6:
	setp.leu.ftz.f32 	%p4, %f268, 0f00000000;
	mov.u32 	%r172, %r173;
	@%p4 bra 	$L__BB2_8;

	ld.const.f32 	%f117, [gcfg+72];
	min.ftz.f32 	%f118, %f268, %f117;
	mul.ftz.f32 	%f119, %f118, %f13;
	cvt.rmi.ftz.s32.f32 	%r172, %f119;

$L__BB2_8:
	setp.leu.ftz.f32 	%p5, %f267, 0f00000000;
	@%p5 bra 	$L__BB2_10;

	ld.const.f32 	%f120, [gcfg+76];
	min.ftz.f32 	%f121, %f267, %f120;
	mul.ftz.f32 	%f122, %f121, %f13;
	cvt.rmi.ftz.s32.f32 	%r173, %f122;

$L__BB2_10:
	sub.ftz.f32 	%f123, %f270, %f27;
	mul.ftz.f32 	%f124, %f123, %f28;
	cvt.rzi.ftz.s32.f32 	%r88, %f124;
	ld.const.v2.u32 	{%r89, %r90}, [gcfg+80];
	min.s32 	%r91, %r88, %r7;
	mad.lo.s32 	%r92, %r91, %r8, %r171;
	mad.lo.s32 	%r93, %r90, %r173, %r92;
	mad.lo.s32 	%r183, %r89, %r172, %r93;
	setp.gt.s32 	%p6, %r82, 1;
	@%p6 bra 	$L__BB2_12;
	bra.uni 	$L__BB2_11;

$L__BB2_12:
	ld.const.f32 	%f29, [gcfg+68];
	ld.const.v2.f32 	{%f125, %f126}, [gcfg+72];
	ld.const.u64 	%rd51, [gcfg+16];
	cvta.to.global.u64 	%rd4, %rd51;
	ld.const.u32 	%r18, [gcfg+92];
	setp.eq.s32 	%p7, %r175, 0;
	mov.f32 	%f264, %f266;
	@%p7 bra 	$L__BB2_37;

	mov.u32 	%r95, 0;
	mov.f32 	%f264, %f266;

$L__BB2_14:
	add.ftz.f32 	%f38, %f20, %f268;
	add.ftz.f32 	%f39, %f21, %f267;
	add.ftz.f32 	%f40, %f25, %f270;
	add.ftz.f32 	%f41, %f19, %f269;
	setp.leu.ftz.f32 	%p8, %f41, 0f00000000;
	mov.u32 	%r176, %r95;
	@%p8 bra 	$L__BB2_16;

	min.ftz.f32 	%f127, %f41, %f29;
	mul.ftz.f32 	%f128, %f127, %f13;
	cvt.rmi.ftz.s32.f32 	%r176, %f128;

$L__BB2_16:
	setp.leu.ftz.f32 	%p9, %f38, 0f00000000;
	mov.u32 	%r177, %r95;
	@%p9 bra 	$L__BB2_18;

	min.ftz.f32 	%f129, %f38, %f125;
	mul.ftz.f32 	%f130, %f129, %f13;
	cvt.rmi.ftz.s32.f32 	%r177, %f130;

$L__BB2_18:
	setp.leu.ftz.f32 	%p10, %f39, 0f00000000;
	mov.u32 	%r178, %r95;
	@%p10 bra 	$L__BB2_20;

	min.ftz.f32 	%f131, %f39, %f126;
	mul.ftz.f32 	%f132, %f131, %f13;
	cvt.rmi.ftz.s32.f32 	%r178, %f132;

$L__BB2_20:
	sub.ftz.f32 	%f133, %f40, %f27;
	mul.ftz.f32 	%f134, %f133, %f28;
	cvt.rzi.ftz.s32.f32 	%r98, %f134;
	min.s32 	%r99, %r98, %r7;
	mad.lo.s32 	%r100, %r99, %r8, %r176;
	mad.lo.s32 	%r101, %r90, %r178, %r100;
	mad.lo.s32 	%r27, %r89, %r177, %r101;
	setp.eq.s32 	%p11, %r27, %r183;
	mov.f32 	%f254, 0f00000000;
	mov.u32 	%r179, %r183;
	@%p11 bra 	$L__BB2_25;

	mul.wide.u32 	%rd16, %r183, 4;
	add.s64 	%rd5, %rd4, %rd16;
	atom.global.add.f32 	%f42, [%rd5], %f264;
	setp.leu.ftz.f32 	%p12, %f42, 0f447A0000;
	mov.f32 	%f264, %f254;
	mov.u32 	%r179, %r27;
	@%p12 bra 	$L__BB2_25;

	neg.ftz.f32 	%f136, %f42;
	atom.global.add.f32 	%f137, [%rd5], %f136;
	setp.lt.ftz.f32 	%p13, %f137, 0f00000000;
	@%p13 bra 	$L__BB2_24;
	bra.uni 	$L__BB2_23;

$L__BB2_24:
	atom.global.add.f32 	%f141, [%rd5], %f42;
	mov.f32 	%f264, %f254;
	mov.u32 	%r179, %r27;
	bra.uni 	$L__BB2_25;

$L__BB2_23:
	add.s32 	%r102, %r18, %r183;
	mul.wide.u32 	%rd17, %r102, 4;
	add.s64 	%rd18, %rd4, %rd17;
	atom.global.add.f32 	%f139, [%rd18], %f42;
	mov.f32 	%f264, %f254;
	mov.u32 	%r179, %r27;

$L__BB2_25:
	mul.ftz.f32 	%f142, %f15, %f266;
	add.ftz.f32 	%f265, %f142, %f264;
	mul.ftz.f32 	%f266, %f15, %f142;
	add.ftz.f32 	%f268, %f20, %f38;
	add.ftz.f32 	%f267, %f21, %f39;
	add.ftz.f32 	%f270, %f25, %f40;
	add.ftz.f32 	%f269, %f19, %f41;
	setp.leu.ftz.f32 	%p14, %f269, 0f00000000;
	mov.u32 	%r182, 0;
	mov.u32 	%r180, %r182;
	@%p14 bra 	$L__BB2_27;

	min.ftz.f32 	%f143, %f269, %f29;
	mul.ftz.f32 	%f144, %f143, %f13;
	cvt.rmi.ftz.s32.f32 	%r180, %f144;

$L__BB2_27:
	setp.leu.ftz.f32 	%p15, %f268, 0f00000000;
	mov.u32 	%r181, %r182;
	@%p15 bra 	$L__BB2_29;

	min.ftz.f32 	%f145, %f268, %f125;
	mul.ftz.f32 	%f146, %f145, %f13;
	cvt.rmi.ftz.s32.f32 	%r181, %f146;

$L__BB2_29:
	setp.leu.ftz.f32 	%p16, %f267, 0f00000000;
	@%p16 bra 	$L__BB2_31;

	min.ftz.f32 	%f147, %f267, %f126;
	mul.ftz.f32 	%f148, %f147, %f13;
	cvt.rmi.ftz.s32.f32 	%r182, %f148;

$L__BB2_31:
	sub.ftz.f32 	%f149, %f270, %f27;
	mul.ftz.f32 	%f150, %f149, %f28;
	cvt.rzi.ftz.s32.f32 	%r106, %f150;
	min.s32 	%r107, %r106, %r7;
	mad.lo.s32 	%r108, %r107, %r8, %r180;
	mad.lo.s32 	%r109, %r90, %r182, %r108;
	mad.lo.s32 	%r35, %r89, %r181, %r109;
	setp.eq.s32 	%p17, %r35, %r179;
	mov.f32 	%f255, 0f00000000;
	mov.u32 	%r183, %r179;
	@%p17 bra 	$L__BB2_36;

	mul.wide.u32 	%rd19, %r179, 4;
	add.s64 	%rd6, %rd4, %rd19;
	atom.global.add.f32 	%f50, [%rd6], %f265;
	setp.leu.ftz.f32 	%p18, %f50, 0f447A0000;
	mov.f32 	%f265, %f255;
	mov.u32 	%r183, %r35;
	@%p18 bra 	$L__BB2_36;

	neg.ftz.f32 	%f152, %f50;
	atom.global.add.f32 	%f153, [%rd6], %f152;
	setp.lt.ftz.f32 	%p19, %f153, 0f00000000;
	@%p19 bra 	$L__BB2_35;
	bra.uni 	$L__BB2_34;

$L__BB2_35:
	atom.global.add.f32 	%f157, [%rd6], %f50;
	mov.f32 	%f265, %f255;
	mov.u32 	%r183, %r35;
	bra.uni 	$L__BB2_36;

$L__BB2_34:
	add.s32 	%r110, %r18, %r179;
	mul.wide.u32 	%rd20, %r110, 4;
	add.s64 	%rd21, %rd4, %rd20;
	atom.global.add.f32 	%f155, [%rd21], %f50;
	mov.f32 	%f265, %f255;
	mov.u32 	%r183, %r35;

$L__BB2_36:
	add.ftz.f32 	%f264, %f266, %f265;
	add.s32 	%r175, %r175, -2;
	setp.ne.s32 	%p20, %r175, 0;
	@%p20 bra 	$L__BB2_14;

$L__BB2_37:
	mul.ftz.f32 	%f59, %f15, %f266;
	add.ftz.f32 	%f60, %f20, %f268;
	add.ftz.f32 	%f61, %f21, %f267;
	add.ftz.f32 	%f158, %f25, %f270;
	sub.ftz.f32 	%f159, %f158, %f27;
	mul.ftz.f32 	%f160, %f159, %f28;
	cvt.rzi.ftz.s32.f32 	%r112, %f160;
	min.s32 	%r113, %r112, %r7;
	mul.lo.s32 	%r39, %r113, %r8;
	add.ftz.f32 	%f62, %f19, %f269;
	setp.leu.ftz.f32 	%p21, %f62, 0f00000000;
	mov.u32 	%r187, 0;
	mov.u32 	%r185, %r187;
	@%p21 bra 	$L__BB2_39;

	min.ftz.f32 	%f161, %f62, %f29;
	mul.ftz.f32 	%f162, %f161, %f13;
	cvt.rmi.ftz.s32.f32 	%r185, %f162;

$L__BB2_39:
	setp.leu.ftz.f32 	%p22, %f60, 0f00000000;
	mov.u32 	%r186, %r187;
	@%p22 bra 	$L__BB2_41;

	min.ftz.f32 	%f163, %f60, %f125;
	mul.ftz.f32 	%f164, %f163, %f13;
	cvt.rmi.ftz.s32.f32 	%r186, %f164;

$L__BB2_41:
	setp.leu.ftz.f32 	%p23, %f61, 0f00000000;
	@%p23 bra 	$L__BB2_43;

	min.ftz.f32 	%f165, %f61, %f126;
	mul.ftz.f32 	%f166, %f165, %f13;
	cvt.rmi.ftz.s32.f32 	%r187, %f166;

$L__BB2_43:
	add.s32 	%r116, %r185, %r39;
	mad.lo.s32 	%r117, %r90, %r187, %r116;
	mad.lo.s32 	%r46, %r89, %r186, %r117;
	setp.eq.s32 	%p24, %r46, %r183;
	mov.f32 	%f256, 0f00000000;
	mov.u32 	%r188, %r183;
	@%p24 bra 	$L__BB2_48;

	mul.wide.u32 	%rd22, %r183, 4;
	add.s64 	%rd7, %rd4, %rd22;
	atom.global.add.f32 	%f63, [%rd7], %f264;
	setp.leu.ftz.f32 	%p25, %f63, 0f447A0000;
	mov.f32 	%f264, %f256;
	mov.u32 	%r188, %r46;
	@%p25 bra 	$L__BB2_48;

	neg.ftz.f32 	%f168, %f63;
	atom.global.add.f32 	%f169, [%rd7], %f168;
	setp.lt.ftz.f32 	%p26, %f169, 0f00000000;
	@%p26 bra 	$L__BB2_47;
	bra.uni 	$L__BB2_46;

$L__BB2_47:
	atom.global.add.f32 	%f173, [%rd7], %f63;
	mov.f32 	%f264, %f256;
	mov.u32 	%r188, %r46;
	bra.uni 	$L__BB2_48;

$L__BB2_11:
	ld.const.u64 	%rd51, [gcfg+16];
	mov.u32 	%r188, %r183;
	bra.uni 	$L__BB2_49;

$L__BB2_46:
	add.s32 	%r118, %r18, %r183;
	mul.wide.u32 	%rd23, %r118, 4;
	add.s64 	%rd24, %rd4, %rd23;
	atom.global.add.f32 	%f171, [%rd24], %f63;
	mov.f32 	%f264, %f256;
	mov.u32 	%r188, %r46;

$L__BB2_48:
	add.ftz.f32 	%f266, %f59, %f264;

$L__BB2_49:
	cvta.to.global.u64 	%rd9, %rd51;
	mul.wide.u32 	%rd25, %r188, 4;
	add.s64 	%rd10, %rd9, %rd25;
	atom.global.add.f32 	%f67, [%rd10], %f266;
	setp.leu.ftz.f32 	%p27, %f67, 0f447A0000;
	@%p27 bra 	$L__BB2_53;

	neg.ftz.f32 	%f174, %f67;
	atom.global.add.f32 	%f175, [%rd10], %f174;
	setp.lt.ftz.f32 	%p28, %f175, 0f00000000;
	@%p28 bra 	$L__BB2_52;
	bra.uni 	$L__BB2_51;

$L__BB2_52:
	atom.global.add.f32 	%f177, [%rd10], %f67;
	bra.uni 	$L__BB2_53;

$L__BB2_51:
	ld.const.u32 	%r119, [gcfg+92];
	add.s32 	%r120, %r119, %r188;
	mul.wide.u32 	%rd26, %r120, 4;
	add.s64 	%rd27, %rd9, %rd26;
	atom.global.add.f32 	%f176, [%rd27], %f67;

$L__BB2_53:
	mov.b64 	%rd28, {%r77, %r79};
	fma.rn.ftz.f32 	%f68, %f12, %f4, %f1;
	fma.rn.ftz.f32 	%f69, %f12, %f5, %f2;
	fma.rn.ftz.f32 	%f70, %f12, %f6, %f3;
	mul.ftz.f32 	%f178, %f90, %f12;
	mul.ftz.f32 	%f179, %f178, 0fBFB8AA3B;
	ex2.approx.ftz.f32 	%f180, %f179;
	mul.ftz.f32 	%f71, %f180, %f7;
	mul.ftz.f32 	%f181, %f12, 0f2C6AB991;
	fma.rn.ftz.f32 	%f72, %f93, %f181, %f8;
	shl.b64 	%rd29, %rd1, 23;
	xor.b64  	%rd30, %rd29, %rd1;
	xor.b64  	%rd31, %rd30, %rd28;
	shr.u64 	%rd32, %rd30, 18;
	xor.b64  	%rd33, %rd31, %rd32;
	shr.u64 	%rd34, %rd28, 5;
	xor.b64  	%rd11, %rd33, %rd34;
	add.s64 	%rd35, %rd11, %rd28;
	cvt.u32.u64 	%r121, %rd35;
	shr.u32 	%r122, %r121, 9;
	or.b32  	%r123, %r122, 1065353216;
	mov.b32 	%f182, %r123;
	add.ftz.f32 	%f183, %f182, 0fBF800000;
	mov.f32 	%f184, 0f3F800000;
	mov.f32 	%f185, 0f40C90FDB;
	sub.ftz.f32 	%f186, %f185, 0f00000000;
	fma.rn.ftz.f32 	%f187, %f183, %f186, 0f00000000;
	sin.approx.ftz.f32 	%f73, %f187;
	cos.approx.ftz.f32 	%f74, %f187;
	abs.ftz.f32 	%f188, %f92;
	setp.gt.ftz.f32 	%p29, %f188, 0f34000000;
	shl.b64 	%rd36, %rd28, 23;
	xor.b64  	%rd37, %rd36, %rd28;
	xor.b64  	%rd38, %rd11, %rd37;
	shr.u64 	%rd39, %rd37, 18;
	xor.b64  	%rd40, %rd38, %rd39;
	shr.u64 	%rd41, %rd11, 5;
	xor.b64  	%rd12, %rd40, %rd41;
	add.s64 	%rd42, %rd12, %rd11;
	cvt.u32.u64 	%r124, %rd42;
	shr.u32 	%r125, %r124, 9;
	or.b32  	%r126, %r125, 1065353216;
	mov.b32 	%f189, %r126;
	add.ftz.f32 	%f190, %f189, 0fBF800000;
	sub.ftz.f32 	%f191, %f184, 0f00000000;
	fma.rn.ftz.f32 	%f75, %f190, %f191, 0f00000000;
	@%p29 bra 	$L__BB2_55;
	bra.uni 	$L__BB2_54;

$L__BB2_55:
	mul.ftz.f32 	%f192, %f92, %f92;
	sub.ftz.f32 	%f194, %f184, %f192;
	add.ftz.f32 	%f195, %f92, %f92;
	sub.ftz.f32 	%f196, %f184, %f92;
	fma.rn.ftz.f32 	%f197, %f195, %f75, %f196;
	div.approx.ftz.f32 	%f198, %f194, %f197;
	mul.ftz.f32 	%f199, %f198, %f198;
	add.ftz.f32 	%f200, %f192, 0f3F800000;
	sub.ftz.f32 	%f201, %f200, %f199;
	div.approx.ftz.f32 	%f202, %f201, %f195;
	min.ftz.f32 	%f203, %f184, %f202;
	mov.f32 	%f204, 0fBF800000;
	max.ftz.f32 	%f274, %f204, %f203;
	bra.uni 	$L__BB2_56;

$L__BB2_54:
	fma.rn.ftz.f32 	%f274, %f75, 0f40000000, 0fBF800000;

$L__BB2_56:
	abs.ftz.f32 	%f205, %f274;
	sub.ftz.f32 	%f207, %f184, %f205;
	mul.ftz.f32 	%f208, %f207, 0f3F000000;
	sqrt.approx.ftz.f32 	%f209, %f208;
	setp.gt.ftz.f32 	%p30, %f205, 0f3F11EB85;
	selp.f32 	%f210, %f209, %f205, %p30;
	mul.ftz.f32 	%f211, %f210, %f210;
	mov.f32 	%f212, 0f3C94D2E9;
	mov.f32 	%f213, 0f3D53F941;
	fma.rn.ftz.f32 	%f214, %f213, %f211, %f212;
	mov.f32 	%f215, 0f3D3F841F;
	fma.rn.ftz.f32 	%f216, %f214, %f211, %f215;
	mov.f32 	%f217, 0f3D994929;
	fma.rn.ftz.f32 	%f218, %f216, %f211, %f217;
	mov.f32 	%f219, 0f3E2AAB94;
	fma.rn.ftz.f32 	%f220, %f218, %f211, %f219;
	mul.ftz.f32 	%f221, %f211, %f220;
	fma.rn.ftz.f32 	%f222, %f221, %f210, %f210;
	add.ftz.f32 	%f223, %f222, %f222;
	mov.f32 	%f224, 0f3FC90FDB;
	sub.ftz.f32 	%f225, %f224, %f222;
	selp.f32 	%f226, %f223, %f225, %p30;
	mov.f32 	%f227, 0f40490FDB;
	sub.ftz.f32 	%f228, %f227, %f226;
	setp.lt.ftz.f32 	%p31, %f274, 0f00000000;
	selp.f32 	%f229, %f228, %f226, %p31;
	sin.approx.ftz.f32 	%f79, %f229;
	setp.lt.ftz.f32 	%p32, %f6, 0f3F7FFFFE;
	setp.gt.ftz.f32 	%p33, %f6, 0fBF7FFFFE;
	and.pred  	%p34, %p33, %p32;
	@%p34 bra 	$L__BB2_58;
	bra.uni 	$L__BB2_57;

$L__BB2_58:
	mul.ftz.f32 	%f231, %f6, %f6;
	sub.ftz.f32 	%f233, %f184, %f231;
	rsqrt.approx.ftz.f32 	%f234, %f233;
	mul.ftz.f32 	%f235, %f79, %f234;
	mul.ftz.f32 	%f236, %f233, %f74;
	mul.ftz.f32 	%f237, %f74, %f4;
	mul.ftz.f32 	%f238, %f237, %f6;
	mul.ftz.f32 	%f239, %f74, %f5;
	mul.ftz.f32 	%f240, %f239, %f6;
	mul.ftz.f32 	%f241, %f73, %f5;
	sub.ftz.f32 	%f242, %f238, %f241;
	fma.rn.ftz.f32 	%f243, %f73, %f4, %f240;
	mul.ftz.f32 	%f244, %f73, 0f00000000;
	sub.ftz.f32 	%f245, %f244, %f236;
	mul.ftz.f32 	%f246, %f242, %f235;
	mul.ftz.f32 	%f247, %f243, %f235;
	mul.ftz.f32 	%f248, %f245, %f235;
	fma.rn.ftz.f32 	%f277, %f274, %f6, %f248;
	fma.rn.ftz.f32 	%f276, %f274, %f5, %f247;
	fma.rn.ftz.f32 	%f275, %f274, %f4, %f246;
	bra.uni 	$L__BB2_59;

$L__BB2_57:
	neg.ftz.f32 	%f230, %f274;
	setp.gt.ftz.f32 	%p35, %f6, 0f00000000;
	selp.f32 	%f277, %f274, %f230, %p35;
	mul.ftz.f32 	%f276, %f73, %f79;
	mul.ftz.f32 	%f275, %f74, %f79;

$L__BB2_59:
	mov.u32 	%r170, 5;
	mov.u32 	%r169, 4;
	mov.u32 	%r168, 3;
	mov.u32 	%r167, 2;
	mov.u32 	%r166, 1;
	mov.u32 	%r165, 13;
	mov.u32 	%r164, 12;
	mov.u32 	%r163, 11;
	mov.u32 	%r162, 10;
	shl.b64 	%rd43, %rd11, 23;
	xor.b64  	%rd44, %rd43, %rd11;
	xor.b64  	%rd45, %rd12, %rd44;
	shr.u64 	%rd46, %rd44, 18;
	xor.b64  	%rd47, %rd45, %rd46;
	shr.u64 	%rd48, %rd12, 5;
	xor.b64  	%rd49, %rd47, %rd48;
	add.s64 	%rd50, %rd49, %rd12;
	cvt.u32.u64 	%r159, %rd50;
	mov.u32 	%r135, 0;
	shr.u32 	%r160, %r159, 9;
	or.b32  	%r161, %r160, 1065353216;
	mov.b32 	%f249, %r161;
	add.ftz.f32 	%f250, %f249, 0fBF800000;
	add.ftz.f32 	%f251, %f250, 0f34000000;
	lg2.approx.ftz.f32 	%f252, %f251;
	mul.ftz.f32 	%f253, %f252, 0fBF317218;
	mov.b64 	{%r134, %r128}, %rd12;
	// begin inline asm
	call _optix_set_payload, (%r162, %r128);
	// end inline asm
	mov.b64 	{%r130, %r132}, %rd49;
	// begin inline asm
	call _optix_set_payload, (%r163, %r130);
	// end inline asm
	// begin inline asm
	call _optix_set_payload, (%r164, %r132);
	// end inline asm
	// begin inline asm
	call _optix_set_payload, (%r165, %r134);
	// end inline asm
	mov.b32 	%r136, %f68;
	// begin inline asm
	call _optix_set_payload, (%r135, %r136);
	// end inline asm
	mov.b32 	%r138, %f69;
	// begin inline asm
	call _optix_set_payload, (%r166, %r138);
	// end inline asm
	mov.b32 	%r140, %f70;
	// begin inline asm
	call _optix_set_payload, (%r167, %r140);
	// end inline asm
	mov.b32 	%r142, %f275;
	// begin inline asm
	call _optix_set_payload, (%r168, %r142);
	// end inline asm
	mov.b32 	%r144, %f276;
	// begin inline asm
	call _optix_set_payload, (%r169, %r144);
	// end inline asm
	mov.b32 	%r146, %f277;
	// begin inline asm
	call _optix_set_payload, (%r170, %r146);
	// end inline asm
	mov.b32 	%r148, %f253;
	// begin inline asm
	call _optix_set_payload, (%r62, %r148);
	// end inline asm
	mov.b32 	%r150, %f71;
	// begin inline asm
	call _optix_set_payload, (%r64, %r150);
	// end inline asm
	mov.b32 	%r152, %f72;
	// begin inline asm
	call _optix_set_payload, (%r66, %r152);
	// end inline asm
	// begin inline asm
	call _optix_set_payload, (%r68, %r67);
	// end inline asm
	// begin inline asm
	call _optix_set_payload, (%r70, %r69);
	// end inline asm
	// begin inline asm
	call _optix_set_payload, (%r72, %r71);
	// end inline asm
	ret;

}
	// .globl	__intersection__customlinearcapsule
.visible .entry __intersection__customlinearcapsule()
{
	.reg .pred 	%p<13>;
	.reg .f32 	%f<214>;
	.reg .b32 	%r<20>;
	.reg .b64 	%rd<5>;


	// begin inline asm
	call (%r1), _optix_read_primitive_idx, ();
	// end inline asm
	ld.const.v2.u32 	{%r2, %r3}, [gcfg+112];
	mov.b32 	%f62, %r2;
	setp.lt.u32 	%p1, %r1, %r3;
	selp.b32 	%r6, 0, %r3, %p1;
	sub.s32 	%r7, %r1, %r6;
	selp.f32 	%f63, 0f00000000, %f62, %p1;
	ld.const.u64 	%rd2, [gcfg+24];
	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r7, 28;
	add.s64 	%rd1, %rd3, %rd4;
	ld.global.f32 	%f64, [%rd1+12];
	ld.global.f32 	%f1, [%rd1];
	sub.ftz.f32 	%f2, %f1, %f64;
	ld.global.f32 	%f65, [%rd1+16];
	ld.global.f32 	%f3, [%rd1+4];
	sub.ftz.f32 	%f4, %f3, %f65;
	ld.global.f32 	%f66, [%rd1+20];
	ld.global.f32 	%f5, [%rd1+8];
	sub.ftz.f32 	%f6, %f5, %f66;
	ld.global.f32 	%f67, [%rd1+24];
	add.ftz.f32 	%f68, %f63, %f67;
	// begin inline asm
	call (%f54), _optix_get_world_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f55), _optix_get_world_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f56), _optix_get_world_ray_direction_z, ();
	// end inline asm
	mul.ftz.f32 	%f69, %f55, %f55;
	fma.rn.ftz.f32 	%f70, %f54, %f54, %f69;
	fma.rn.ftz.f32 	%f71, %f56, %f56, %f70;
	rsqrt.approx.ftz.f32 	%f72, %f71;
	mul.ftz.f32 	%f7, %f54, %f72;
	mul.ftz.f32 	%f8, %f55, %f72;
	mul.ftz.f32 	%f9, %f56, %f72;
	// begin inline asm
	call (%f57), _optix_get_world_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f58), _optix_get_world_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f59), _optix_get_world_ray_origin_z, ();
	// end inline asm
	sub.ftz.f32 	%f73, %f1, %f57;
	sub.ftz.f32 	%f74, %f3, %f58;
	sub.ftz.f32 	%f75, %f5, %f59;
	mul.ftz.f32 	%f76, %f8, %f74;
	fma.rn.ftz.f32 	%f77, %f7, %f73, %f76;
	fma.rn.ftz.f32 	%f13, %f9, %f75, %f77;
	mul.ftz.f32 	%f78, %f74, %f74;
	fma.rn.ftz.f32 	%f79, %f73, %f73, %f78;
	fma.rn.ftz.f32 	%f80, %f75, %f75, %f79;
	mul.ftz.f32 	%f81, %f13, %f13;
	sub.ftz.f32 	%f14, %f80, %f81;
	mul.ftz.f32 	%f15, %f68, %f68;
	setp.gt.ftz.f32 	%p2, %f14, %f15;
	mov.f32 	%f212, 0fBF800000;
	mov.f32 	%f206, %f212;
	mov.f32 	%f207, %f212;
	@%p2 bra 	$L__BB3_2;

	sub.ftz.f32 	%f82, %f15, %f14;
	sqrt.approx.ftz.f32 	%f83, %f82;
	add.ftz.f32 	%f207, %f13, %f83;
	sub.ftz.f32 	%f206, %f13, %f83;

$L__BB3_2:
	fma.rn.ftz.f32 	%f88, %f7, %f206, %f57;
	fma.rn.ftz.f32 	%f89, %f8, %f206, %f58;
	fma.rn.ftz.f32 	%f90, %f9, %f206, %f59;
	fma.rn.ftz.f32 	%f91, %f7, %f207, %f57;
	fma.rn.ftz.f32 	%f92, %f8, %f207, %f58;
	fma.rn.ftz.f32 	%f93, %f9, %f207, %f59;
	sub.ftz.f32 	%f94, %f88, %f1;
	sub.ftz.f32 	%f95, %f89, %f3;
	sub.ftz.f32 	%f96, %f90, %f5;
	mul.ftz.f32 	%f97, %f4, %f95;
	fma.rn.ftz.f32 	%f98, %f2, %f94, %f97;
	fma.rn.ftz.f32 	%f99, %f6, %f96, %f98;
	setp.lt.ftz.f32 	%p3, %f99, 0f00000000;
	selp.f32 	%f84, 0fBF800000, %f206, %p3;
	sub.ftz.f32 	%f100, %f91, %f1;
	sub.ftz.f32 	%f101, %f92, %f3;
	sub.ftz.f32 	%f102, %f93, %f5;
	mul.ftz.f32 	%f103, %f4, %f101;
	fma.rn.ftz.f32 	%f104, %f2, %f100, %f103;
	fma.rn.ftz.f32 	%f105, %f6, %f102, %f104;
	setp.lt.ftz.f32 	%p4, %f105, 0f00000000;
	selp.f32 	%f85, 0fBF800000, %f207, %p4;
	mov.u32 	%r11, 1;
	// begin inline asm
	call (%r8), _optix_report_intersection_0, (%f84, %r11);
	// end inline asm
	// begin inline asm
	call (%r10), _optix_report_intersection_0, (%f85, %r11);
	// end inline asm
	ld.global.f32 	%f20, [%rd1+12];
	sub.ftz.f32 	%f106, %f20, %f57;
	ld.global.f32 	%f21, [%rd1+16];
	sub.ftz.f32 	%f107, %f21, %f58;
	ld.global.f32 	%f22, [%rd1+20];
	sub.ftz.f32 	%f108, %f22, %f59;
	mul.ftz.f32 	%f109, %f8, %f107;
	fma.rn.ftz.f32 	%f110, %f7, %f106, %f109;
	fma.rn.ftz.f32 	%f23, %f9, %f108, %f110;
	mul.ftz.f32 	%f111, %f107, %f107;
	fma.rn.ftz.f32 	%f112, %f106, %f106, %f111;
	fma.rn.ftz.f32 	%f113, %f108, %f108, %f112;
	mul.ftz.f32 	%f114, %f23, %f23;
	sub.ftz.f32 	%f24, %f113, %f114;
	setp.gt.ftz.f32 	%p5, %f24, %f15;
	mov.f32 	%f208, %f212;
	mov.f32 	%f209, %f212;
	@%p5 bra 	$L__BB3_4;

	sub.ftz.f32 	%f115, %f15, %f24;
	sqrt.approx.ftz.f32 	%f116, %f115;
	add.ftz.f32 	%f209, %f23, %f116;
	sub.ftz.f32 	%f208, %f23, %f116;

$L__BB3_4:
	fma.rn.ftz.f32 	%f121, %f7, %f208, %f57;
	fma.rn.ftz.f32 	%f122, %f8, %f208, %f58;
	fma.rn.ftz.f32 	%f123, %f9, %f208, %f59;
	fma.rn.ftz.f32 	%f124, %f7, %f209, %f57;
	fma.rn.ftz.f32 	%f125, %f8, %f209, %f58;
	fma.rn.ftz.f32 	%f126, %f9, %f209, %f59;
	sub.ftz.f32 	%f127, %f20, %f121;
	sub.ftz.f32 	%f128, %f21, %f122;
	sub.ftz.f32 	%f129, %f22, %f123;
	mul.ftz.f32 	%f130, %f4, %f128;
	fma.rn.ftz.f32 	%f131, %f2, %f127, %f130;
	fma.rn.ftz.f32 	%f132, %f6, %f129, %f131;
	setp.lt.ftz.f32 	%p6, %f132, 0f00000000;
	selp.f32 	%f117, 0fBF800000, %f208, %p6;
	sub.ftz.f32 	%f133, %f20, %f124;
	sub.ftz.f32 	%f134, %f21, %f125;
	sub.ftz.f32 	%f135, %f22, %f126;
	mul.ftz.f32 	%f136, %f4, %f134;
	fma.rn.ftz.f32 	%f137, %f2, %f133, %f136;
	fma.rn.ftz.f32 	%f138, %f6, %f135, %f137;
	setp.lt.ftz.f32 	%p7, %f138, 0f00000000;
	selp.f32 	%f118, 0fBF800000, %f209, %p7;
	mov.u32 	%r15, 2;
	// begin inline asm
	call (%r12), _optix_report_intersection_0, (%f117, %r15);
	// end inline asm
	// begin inline asm
	call (%r14), _optix_report_intersection_0, (%f118, %r15);
	// end inline asm
	ld.global.f32 	%f29, [%rd1+12];
	sub.ftz.f32 	%f139, %f57, %f29;
	ld.global.f32 	%f30, [%rd1+16];
	sub.ftz.f32 	%f140, %f58, %f30;
	ld.global.f32 	%f31, [%rd1+20];
	sub.ftz.f32 	%f141, %f59, %f31;
	ld.global.f32 	%f32, [%rd1];
	sub.ftz.f32 	%f142, %f32, %f29;
	ld.global.f32 	%f33, [%rd1+4];
	sub.ftz.f32 	%f143, %f33, %f30;
	ld.global.f32 	%f34, [%rd1+8];
	sub.ftz.f32 	%f144, %f34, %f31;
	mul.ftz.f32 	%f145, %f143, %f143;
	fma.rn.ftz.f32 	%f146, %f142, %f142, %f145;
	fma.rn.ftz.f32 	%f147, %f144, %f144, %f146;
	rsqrt.approx.ftz.f32 	%f148, %f147;
	mov.f32 	%f149, 0f3F800000;
	mul.ftz.f32 	%f150, %f148, %f142;
	mul.ftz.f32 	%f151, %f148, %f143;
	mul.ftz.f32 	%f152, %f148, %f144;
	mul.ftz.f32 	%f153, %f8, %f151;
	fma.rn.ftz.f32 	%f154, %f7, %f150, %f153;
	fma.rn.ftz.f32 	%f155, %f9, %f152, %f154;
	mul.ftz.f32 	%f156, %f140, %f151;
	fma.rn.ftz.f32 	%f157, %f139, %f150, %f156;
	fma.rn.ftz.f32 	%f158, %f141, %f152, %f157;
	mul.ftz.f32 	%f159, %f140, %f140;
	fma.rn.ftz.f32 	%f160, %f139, %f139, %f159;
	fma.rn.ftz.f32 	%f161, %f141, %f141, %f160;
	mul.ftz.f32 	%f162, %f155, %f155;
	sub.ftz.f32 	%f35, %f149, %f162;
	mul.ftz.f32 	%f163, %f8, %f140;
	fma.rn.ftz.f32 	%f164, %f7, %f139, %f163;
	fma.rn.ftz.f32 	%f165, %f9, %f141, %f164;
	mul.ftz.f32 	%f166, %f155, %f158;
	sub.ftz.f32 	%f167, %f165, %f166;
	add.ftz.f32 	%f36, %f167, %f167;
	mul.ftz.f32 	%f168, %f158, %f158;
	sub.ftz.f32 	%f169, %f161, %f168;
	sub.ftz.f32 	%f170, %f169, %f15;
	mul.ftz.f32 	%f171, %f35, 0fC0800000;
	mul.ftz.f32 	%f172, %f171, %f170;
	fma.rn.ftz.f32 	%f37, %f36, %f36, %f172;
	setp.lt.ftz.f32 	%p8, %f37, 0f00000000;
	mov.f32 	%f213, %f212;
	@%p8 bra 	$L__BB3_6;

	neg.ftz.f32 	%f173, %f36;
	sqrt.approx.ftz.f32 	%f174, %f37;
	sub.ftz.f32 	%f175, %f173, %f174;
	add.ftz.f32 	%f176, %f35, %f35;
	sub.ftz.f32 	%f177, %f174, %f36;
	div.approx.ftz.f32 	%f213, %f177, %f176;
	div.approx.ftz.f32 	%f212, %f175, %f176;

$L__BB3_6:
	fma.rn.ftz.f32 	%f43, %f7, %f212, %f57;
	fma.rn.ftz.f32 	%f44, %f8, %f212, %f58;
	fma.rn.ftz.f32 	%f45, %f9, %f212, %f59;
	fma.rn.ftz.f32 	%f47, %f7, %f213, %f57;
	fma.rn.ftz.f32 	%f48, %f8, %f213, %f58;
	fma.rn.ftz.f32 	%f49, %f9, %f213, %f59;
	sub.ftz.f32 	%f178, %f43, %f32;
	sub.ftz.f32 	%f179, %f44, %f33;
	sub.ftz.f32 	%f180, %f45, %f34;
	mul.ftz.f32 	%f181, %f4, %f179;
	fma.rn.ftz.f32 	%f182, %f2, %f178, %f181;
	fma.rn.ftz.f32 	%f183, %f6, %f180, %f182;
	setp.gt.ftz.f32 	%p9, %f183, 0f00000000;
	@%p9 bra 	$L__BB3_8;

	sub.ftz.f32 	%f184, %f43, %f29;
	sub.ftz.f32 	%f185, %f44, %f30;
	mul.ftz.f32 	%f186, %f4, %f185;
	fma.rn.ftz.f32 	%f187, %f2, %f184, %f186;
	sub.ftz.f32 	%f188, %f45, %f31;
	fma.rn.ftz.f32 	%f189, %f6, %f188, %f187;
	setp.geu.ftz.f32 	%p10, %f189, 0f00000000;
	@%p10 bra 	$L__BB3_9;

$L__BB3_8:
	mov.f32 	%f212, 0fBF800000;

$L__BB3_9:
	sub.ftz.f32 	%f191, %f47, %f32;
	sub.ftz.f32 	%f192, %f48, %f33;
	mul.ftz.f32 	%f193, %f4, %f192;
	fma.rn.ftz.f32 	%f194, %f2, %f191, %f193;
	sub.ftz.f32 	%f195, %f49, %f34;
	fma.rn.ftz.f32 	%f196, %f6, %f195, %f194;
	setp.gt.ftz.f32 	%p11, %f196, 0f00000000;
	@%p11 bra 	$L__BB3_11;

	sub.ftz.f32 	%f197, %f47, %f29;
	sub.ftz.f32 	%f198, %f48, %f30;
	mul.ftz.f32 	%f199, %f4, %f198;
	fma.rn.ftz.f32 	%f200, %f2, %f197, %f199;
	sub.ftz.f32 	%f201, %f49, %f31;
	fma.rn.ftz.f32 	%f202, %f6, %f201, %f200;
	setp.geu.ftz.f32 	%p12, %f202, 0f00000000;
	@%p12 bra 	$L__BB3_12;

$L__BB3_11:
	mov.f32 	%f213, 0fBF800000;

$L__BB3_12:
	mov.u32 	%r19, 3;
	// begin inline asm
	call (%r16), _optix_report_intersection_0, (%f212, %r19);
	// end inline asm
	// begin inline asm
	call (%r18), _optix_report_intersection_0, (%f213, %r19);
	// end inline asm
	ret;

}

