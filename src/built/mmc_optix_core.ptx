//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31057947
// Cuda compilation tools, release 11.6, V11.6.124
// Based on NVVM 7.0.1
//

.version 7.6
.target sm_52
.address_size 64

	// .globl	__raygen__rg
.const .align 16 .b8 gcfg[64144];

.visible .entry __raygen__rg()
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<24>;
	.reg .b32 	%r<182>;
	.reg .b64 	%rd<39>;


	// begin inline asm
	call (%r58), _optix_get_launch_index_x, ();
	// end inline asm
	ld.const.u64 	%rd11, [gcfg+8];
	cvta.to.global.u64 	%rd12, %rd11;
	mul.wide.s32 	%rd13, %r58, 16;
	add.s64 	%rd14, %rd12, %rd13;
	ld.global.v4.u32 	{%r61, %r62, %r167, %r168}, [%rd14];
	mov.b64 	%rd15, {%r61, %r62};
	mov.b64 	%rd1, {%r167, %r168};
	shl.b64 	%rd16, %rd15, 23;
	xor.b64  	%rd17, %rd16, %rd15;
	shr.u64 	%rd18, %rd17, 18;
	shr.u64 	%rd19, %rd1, 5;
	xor.b64  	%rd20, %rd19, %rd1;
	xor.b64  	%rd21, %rd20, %rd17;
	xor.b64  	%rd36, %rd21, %rd18;
	ld.const.v2.u32 	{%r65, %r66}, [gcfg+128];
	setp.lt.u32 	%p1, %r58, %r66;
	selp.u32 	%r69, 1, 0, %p1;
	add.s32 	%r5, %r65, %r69;
	setp.lt.s32 	%p2, %r5, 1;
	@%p2 bra 	$L__BB0_5;

	ld.const.u32 	%r6, [gcfg+32];
	ld.const.u64 	%rd3, [gcfg];
	ld.const.u32 	%r9, [gcfg+116];
	add.s64 	%rd22, %rd36, %rd1;
	cvt.u32.u64 	%r73, %rd22;
	mov.u32 	%r72, 0;
	shr.u32 	%r74, %r73, 9;
	or.b32  	%r75, %r74, 1065353216;
	mov.u32 	%r164, 1065353216;
	mov.b32 	%f2, %r75;
	add.ftz.f32 	%f3, %f2, 0fBF800000;
	add.ftz.f32 	%f4, %f3, 0f34000000;
	lg2.approx.ftz.f32 	%f5, %f4;
	mul.ftz.f32 	%f6, %f5, 0fBF317218;
	mov.b32 	%r163, %f6;
	ld.const.v2.u32 	{%r76, %r77}, [gcfg+40];
	ld.const.u32 	%r13, [gcfg+36];
	ld.const.v2.u32 	{%r78, %r79}, [gcfg+24];
	ld.const.f32 	%f1, [gcfg+104];
	mov.f32 	%f15, 0f00000000;
	mov.u32 	%r181, %r72;
	mov.u32 	%r157, %r78;
	mov.u32 	%r158, %r79;
	mov.u32 	%r159, %r6;
	mov.u32 	%r160, %r13;
	mov.u32 	%r161, %r76;
	mov.u32 	%r162, %r77;
	mov.u32 	%r165, %r72;
	mov.u32 	%r166, %r9;
	mov.u64 	%rd35, %rd3;

$L__BB0_2:
	mul.wide.u32 	%rd24, %r166, 16;
	mov.u64 	%rd25, gcfg;
	add.s64 	%rd26, %rd25, %rd24;
	ld.const.f32 	%f16, [%rd26+148];
	mov.b32 	%f17, %r163;
	div.approx.ftz.f32 	%f14, %f17, %f16;
	mov.b64 	{%r131, %r132}, %rd36;
	mov.u32 	%r116, 1;
	mov.b64 	{%r134, %r133}, %rd35;
	mov.b32 	%f12, %r162;
	mov.b32 	%f11, %r161;
	mov.b32 	%f10, %r160;
	mov.b32 	%f9, %r159;
	mov.b32 	%f8, %r158;
	mov.b32 	%f7, %r157;
	mov.u32 	%r113, 255;
	mov.u32 	%r114, 32;
	mov.u32 	%r118, 16;
	// begin inline asm
	call(%r157,%r158,%r159,%r160,%r161,%r162,%r163,%r164,%r165,%r166,%r167,%r168,%r92,%r93,%r94,%r95,%r96,%r97,%r98,%r99,%r100,%r101,%r102,%r103,%r104,%r105,%r106,%r107,%r108,%r109,%r110,%r111),_optix_trace_typed_32,(%r72,%rd35,%f7,%f8,%f9,%f10,%f11,%f12,%f15,%f14,%f15,%r113,%r114,%r72,%r116,%r72,%r118,%r157,%r158,%r159,%r160,%r161,%r162,%r163,%r164,%r165,%r166,%r167,%r168,%r131,%r132,%r133,%r134,%r72,%r72,%r72,%r72,%r72,%r72,%r72,%r72,%r72,%r72,%r72,%r72,%r72,%r72,%r72,%r72);
	// end inline asm
	mov.b64 	%rd36, {%r92, %r93};
	mov.b64 	%rd35, {%r95, %r94};
	setp.ne.s32 	%p3, %r166, 0;
	mov.b32 	%f18, %r165;
	setp.gt.ftz.f32 	%p4, %f1, %f18;
	and.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_4;

	mov.b64 	%rd27, {%r167, %r168};
	shl.b64 	%rd28, %rd27, 23;
	xor.b64  	%rd29, %rd28, %rd27;
	shr.u64 	%rd30, %rd29, 18;
	shr.u64 	%rd31, %rd36, 5;
	xor.b64  	%rd32, %rd31, %rd36;
	xor.b64  	%rd33, %rd32, %rd29;
	xor.b64  	%rd8, %rd33, %rd30;
	add.s64 	%rd34, %rd8, %rd36;
	cvt.u32.u64 	%r153, %rd34;
	mov.u32 	%r165, 0;
	shr.u32 	%r154, %r153, 9;
	or.b32  	%r155, %r154, 1065353216;
	mov.u32 	%r164, 1065353216;
	mov.b32 	%f19, %r155;
	add.ftz.f32 	%f20, %f19, 0fBF800000;
	add.ftz.f32 	%f21, %f20, 0f34000000;
	lg2.approx.ftz.f32 	%f22, %f21;
	mul.ftz.f32 	%f23, %f22, 0fBF317218;
	mov.b32 	%r163, %f23;
	add.s32 	%r181, %r181, 1;
	mov.u64 	%rd36, %rd8;
	mov.u32 	%r167, %r92;
	mov.u32 	%r168, %r93;
	mov.u64 	%rd35, %rd3;
	mov.u32 	%r166, %r9;
	mov.u32 	%r162, %r77;
	mov.u32 	%r161, %r76;
	mov.u32 	%r160, %r13;
	mov.u32 	%r159, %r6;
	mov.u32 	%r158, %r79;
	mov.u32 	%r157, %r78;

$L__BB0_4:
	setp.lt.s32 	%p6, %r181, %r5;
	@%p6 bra 	$L__BB0_2;

$L__BB0_5:
	ret;

}
	// .globl	__closesthit__ch
.visible .entry __closesthit__ch()
{
	.reg .pred 	%p<37>;
	.reg .f32 	%f<300>;
	.reg .b32 	%r<210>;
	.reg .b64 	%rd<72>;


	mov.u32 	%r186, 0;
	// begin inline asm
	call (%r58), _optix_get_payload, (%r186);
	// end inline asm
	mov.b32 	%f1, %r58;
	mov.u32 	%r61, 1;
	// begin inline asm
	call (%r60), _optix_get_payload, (%r61);
	// end inline asm
	mov.b32 	%f2, %r60;
	mov.u32 	%r63, 2;
	// begin inline asm
	call (%r62), _optix_get_payload, (%r63);
	// end inline asm
	mov.b32 	%f3, %r62;
	mov.u32 	%r65, 3;
	// begin inline asm
	call (%r64), _optix_get_payload, (%r65);
	// end inline asm
	mov.b32 	%f296, %r64;
	mov.u32 	%r67, 4;
	// begin inline asm
	call (%r66), _optix_get_payload, (%r67);
	// end inline asm
	mov.b32 	%f295, %r66;
	mov.u32 	%r69, 5;
	// begin inline asm
	call (%r68), _optix_get_payload, (%r69);
	// end inline asm
	mov.b32 	%f294, %r68;
	mov.u32 	%r71, 6;
	// begin inline asm
	call (%r70), _optix_get_payload, (%r71);
	// end inline asm
	mov.b32 	%f7, %r70;
	mov.u32 	%r73, 7;
	// begin inline asm
	call (%r72), _optix_get_payload, (%r73);
	// end inline asm
	mov.b32 	%f8, %r72;
	mov.u32 	%r75, 8;
	// begin inline asm
	call (%r74), _optix_get_payload, (%r75);
	// end inline asm
	mov.b32 	%f9, %r74;
	mov.u32 	%r77, 9;
	// begin inline asm
	call (%r76), _optix_get_payload, (%r77);
	// end inline asm
	mov.u32 	%r79, 14;
	// begin inline asm
	call (%r78), _optix_get_payload, (%r79);
	// end inline asm
	cvt.u64.u32 	%rd19, %r78;
	mov.u32 	%r81, 15;
	// begin inline asm
	call (%r80), _optix_get_payload, (%r81);
	// end inline asm
	cvt.u64.u32 	%rd20, %r80;
	bfi.b64 	%rd1, %rd19, %rd20, 32, 32;
	mov.u32 	%r83, 10;
	// begin inline asm
	call (%r203), _optix_get_payload, (%r83);
	// end inline asm
	mov.u32 	%r85, 11;
	// begin inline asm
	call (%r204), _optix_get_payload, (%r85);
	// end inline asm
	mov.u32 	%r87, 12;
	mov.u32 	%r89, 13;
	// begin inline asm
	call (%r86), _optix_get_payload, (%r87);
	// end inline asm
	// begin inline asm
	call (%r88), _optix_get_payload, (%r89);
	// end inline asm
	// begin inline asm
	call (%f108), _optix_get_ray_tmax, ();
	// end inline asm
	mul.wide.u32 	%rd21, %r76, 16;
	mov.u64 	%rd22, gcfg;
	add.s64 	%rd23, %rd22, %rd21;
	ld.const.v4.f32 	{%f109, %f110, %f111, %f112}, [%rd23+144];
	ld.const.f32 	%f17, [gcfg+96];
	mul.ftz.f32 	%f113, %f108, %f17;
	cvt.rzi.ftz.s32.f32 	%r90, %f113;
	shl.b32 	%r188, %r90, 1;
	add.s32 	%r91, %r188, 2;
	cvt.rn.f32.s32 	%f114, %r91;
	div.approx.ftz.f32 	%f18, %f108, %f114;
	mul.ftz.f32 	%f115, %f109, %f18;
	mul.ftz.f32 	%f116, %f115, 0fBFB8AA3B;
	ex2.approx.ftz.f32 	%f19, %f116;
	ld.const.u32 	%r92, [gcfg+124];
	setp.eq.s32 	%p2, %r92, 2;
	@%p2 bra 	$L__BB1_3;
	bra.uni 	$L__BB1_1;

$L__BB1_3:
	mov.f32 	%f121, 0f3F800000;
	sub.ftz.f32 	%f122, %f121, %f19;
	mul.ftz.f32 	%f280, %f122, %f8;
	bra.uni 	$L__BB1_4;

$L__BB1_1:
	setp.eq.ftz.f32 	%p3, %f109, 0f00000000;
	mov.f32 	%f280, 0f00000000;
	@%p3 bra 	$L__BB1_4;

	mov.f32 	%f118, 0f3F800000;
	sub.ftz.f32 	%f119, %f118, %f19;
	mul.ftz.f32 	%f120, %f119, %f8;
	div.approx.ftz.f32 	%f280, %f120, %f109;

$L__BB1_4:
	ld.const.v4.f32 	{%f123, %f124, %f125, %f126}, [gcfg+48];
	sub.ftz.f32 	%f130, %f1, %f123;
	sub.ftz.f32 	%f131, %f2, %f124;
	sub.ftz.f32 	%f132, %f3, %f125;
	mul.ftz.f32 	%f23, %f18, %f296;
	mul.ftz.f32 	%f24, %f18, %f295;
	mul.ftz.f32 	%f25, %f18, %f294;
	fma.rn.ftz.f32 	%f283, %f23, 0f3F000000, %f130;
	fma.rn.ftz.f32 	%f282, %f24, 0f3F000000, %f131;
	fma.rn.ftz.f32 	%f281, %f25, 0f3F000000, %f132;
	mul.ftz.f32 	%f133, %f18, 0f2C6AB991;
	mul.ftz.f32 	%f29, %f112, %f133;
	add.ftz.f32 	%f284, %f29, %f9;
	ld.const.f32 	%f31, [gcfg+100];
	ld.const.f32 	%f32, [gcfg+108];
	ld.const.u32 	%r94, [gcfg+112];
	add.s32 	%r7, %r94, -1;
	ld.const.u32 	%r8, [gcfg+88];
	setp.leu.ftz.f32 	%p4, %f283, 0f00000000;
	mov.u32 	%r184, %r186;
	@%p4 bra 	$L__BB1_6;

	ld.const.f32 	%f134, [gcfg+60];
	min.ftz.f32 	%f135, %f283, %f134;
	mul.ftz.f32 	%f136, %f135, %f17;
	cvt.rmi.ftz.s32.f32 	%r184, %f136;

$L__BB1_6:
	setp.leu.ftz.f32 	%p5, %f282, 0f00000000;
	mov.u32 	%r185, %r186;
	@%p5 bra 	$L__BB1_8;

	ld.const.f32 	%f137, [gcfg+64];
	min.ftz.f32 	%f138, %f282, %f137;
	mul.ftz.f32 	%f139, %f138, %f17;
	cvt.rmi.ftz.s32.f32 	%r185, %f139;

$L__BB1_8:
	setp.leu.ftz.f32 	%p6, %f281, 0f00000000;
	@%p6 bra 	$L__BB1_10;

	ld.const.f32 	%f140, [gcfg+68];
	min.ftz.f32 	%f141, %f281, %f140;
	mul.ftz.f32 	%f142, %f141, %f17;
	cvt.rmi.ftz.s32.f32 	%r186, %f142;

$L__BB1_10:
	sub.ftz.f32 	%f143, %f284, %f31;
	mul.ftz.f32 	%f144, %f143, %f32;
	cvt.rzi.ftz.s32.f32 	%r97, %f144;
	ld.const.v2.u32 	{%r98, %r99}, [gcfg+80];
	min.s32 	%r100, %r97, %r7;
	mad.lo.s32 	%r101, %r100, %r8, %r184;
	mad.lo.s32 	%r102, %r99, %r186, %r101;
	mad.lo.s32 	%r196, %r98, %r185, %r102;
	setp.gt.s32 	%p7, %r91, 1;
	@%p7 bra 	$L__BB1_12;
	bra.uni 	$L__BB1_11;

$L__BB1_12:
	ld.const.f32 	%f33, [gcfg+60];
	ld.const.v2.f32 	{%f145, %f146}, [gcfg+64];
	ld.const.u64 	%rd4, [gcfg+16];
	cvta.to.global.u64 	%rd5, %rd4;
	ld.const.u32 	%r18, [gcfg+92];
	setp.eq.s32 	%p8, %r188, 0;
	mov.f32 	%f278, %f280;
	@%p8 bra 	$L__BB1_37;

	mov.u32 	%r104, 0;
	mov.f32 	%f278, %f280;

$L__BB1_14:
	add.ftz.f32 	%f42, %f24, %f282;
	add.ftz.f32 	%f43, %f25, %f281;
	add.ftz.f32 	%f44, %f29, %f284;
	add.ftz.f32 	%f45, %f23, %f283;
	setp.leu.ftz.f32 	%p9, %f45, 0f00000000;
	mov.u32 	%r189, %r104;
	@%p9 bra 	$L__BB1_16;

	min.ftz.f32 	%f147, %f45, %f33;
	mul.ftz.f32 	%f148, %f147, %f17;
	cvt.rmi.ftz.s32.f32 	%r189, %f148;

$L__BB1_16:
	setp.leu.ftz.f32 	%p10, %f42, 0f00000000;
	mov.u32 	%r190, %r104;
	@%p10 bra 	$L__BB1_18;

	min.ftz.f32 	%f149, %f42, %f145;
	mul.ftz.f32 	%f150, %f149, %f17;
	cvt.rmi.ftz.s32.f32 	%r190, %f150;

$L__BB1_18:
	setp.leu.ftz.f32 	%p11, %f43, 0f00000000;
	mov.u32 	%r191, %r104;
	@%p11 bra 	$L__BB1_20;

	min.ftz.f32 	%f151, %f43, %f146;
	mul.ftz.f32 	%f152, %f151, %f17;
	cvt.rmi.ftz.s32.f32 	%r191, %f152;

$L__BB1_20:
	sub.ftz.f32 	%f153, %f44, %f31;
	mul.ftz.f32 	%f154, %f153, %f32;
	cvt.rzi.ftz.s32.f32 	%r107, %f154;
	min.s32 	%r108, %r107, %r7;
	mad.lo.s32 	%r109, %r108, %r8, %r189;
	mad.lo.s32 	%r110, %r99, %r191, %r109;
	mad.lo.s32 	%r27, %r98, %r190, %r110;
	setp.eq.s32 	%p12, %r27, %r196;
	mov.u32 	%r192, %r196;
	@%p12 bra 	$L__BB1_25;

	mov.f32 	%f265, 0f00000000;
	mul.wide.u32 	%rd24, %r196, 4;
	add.s64 	%rd6, %rd5, %rd24;
	atom.global.add.f32 	%f46, [%rd6], %f278;
	setp.leu.ftz.f32 	%p13, %f46, 0f447A0000;
	mov.f32 	%f278, %f265;
	mov.u32 	%r192, %r27;
	@%p13 bra 	$L__BB1_25;

	neg.ftz.f32 	%f156, %f46;
	atom.global.add.f32 	%f157, [%rd6], %f156;
	setp.lt.ftz.f32 	%p14, %f157, 0f00000000;
	@%p14 bra 	$L__BB1_24;
	bra.uni 	$L__BB1_23;

$L__BB1_24:
	mul.wide.u32 	%rd64, %r196, 4;
	add.s64 	%rd63, %rd5, %rd64;
	mov.f32 	%f278, 0f00000000;
	atom.global.add.f32 	%f161, [%rd63], %f46;
	mov.u32 	%r192, %r27;
	bra.uni 	$L__BB1_25;

$L__BB1_23:
	mov.f32 	%f278, 0f00000000;
	add.s32 	%r111, %r18, %r196;
	mul.wide.u32 	%rd25, %r111, 4;
	add.s64 	%rd26, %rd5, %rd25;
	atom.global.add.f32 	%f159, [%rd26], %f46;
	mov.u32 	%r192, %r27;

$L__BB1_25:
	mul.ftz.f32 	%f162, %f19, %f280;
	add.ftz.f32 	%f279, %f162, %f278;
	mul.ftz.f32 	%f280, %f19, %f162;
	add.ftz.f32 	%f282, %f24, %f42;
	add.ftz.f32 	%f281, %f25, %f43;
	add.ftz.f32 	%f284, %f29, %f44;
	add.ftz.f32 	%f283, %f23, %f45;
	setp.leu.ftz.f32 	%p15, %f283, 0f00000000;
	mov.u32 	%r193, 0;
	@%p15 bra 	$L__BB1_27;

	min.ftz.f32 	%f163, %f283, %f33;
	mul.ftz.f32 	%f164, %f163, %f17;
	cvt.rmi.ftz.s32.f32 	%r193, %f164;

$L__BB1_27:
	mov.u32 	%r194, 0;
	setp.leu.ftz.f32 	%p16, %f282, 0f00000000;
	@%p16 bra 	$L__BB1_29;

	min.ftz.f32 	%f165, %f282, %f145;
	mul.ftz.f32 	%f166, %f165, %f17;
	cvt.rmi.ftz.s32.f32 	%r194, %f166;

$L__BB1_29:
	mov.u32 	%r195, 0;
	setp.leu.ftz.f32 	%p17, %f281, 0f00000000;
	@%p17 bra 	$L__BB1_31;

	min.ftz.f32 	%f167, %f281, %f146;
	mul.ftz.f32 	%f168, %f167, %f17;
	cvt.rmi.ftz.s32.f32 	%r195, %f168;

$L__BB1_31:
	sub.ftz.f32 	%f169, %f284, %f31;
	mul.ftz.f32 	%f170, %f169, %f32;
	cvt.rzi.ftz.s32.f32 	%r115, %f170;
	min.s32 	%r116, %r115, %r7;
	mad.lo.s32 	%r117, %r116, %r8, %r193;
	mad.lo.s32 	%r118, %r99, %r195, %r117;
	mad.lo.s32 	%r35, %r98, %r194, %r118;
	setp.eq.s32 	%p18, %r35, %r192;
	mov.u32 	%r196, %r192;
	@%p18 bra 	$L__BB1_36;

	mov.f32 	%f268, 0f00000000;
	mul.wide.u32 	%rd27, %r192, 4;
	add.s64 	%rd7, %rd5, %rd27;
	atom.global.add.f32 	%f54, [%rd7], %f279;
	setp.leu.ftz.f32 	%p19, %f54, 0f447A0000;
	mov.f32 	%f279, %f268;
	mov.u32 	%r196, %r35;
	@%p19 bra 	$L__BB1_36;

	neg.ftz.f32 	%f172, %f54;
	atom.global.add.f32 	%f173, [%rd7], %f172;
	setp.lt.ftz.f32 	%p20, %f173, 0f00000000;
	@%p20 bra 	$L__BB1_35;
	bra.uni 	$L__BB1_34;

$L__BB1_35:
	mul.wide.u32 	%rd66, %r192, 4;
	add.s64 	%rd65, %rd5, %rd66;
	mov.f32 	%f279, 0f00000000;
	atom.global.add.f32 	%f177, [%rd65], %f54;
	mov.u32 	%r196, %r35;
	bra.uni 	$L__BB1_36;

$L__BB1_34:
	mov.f32 	%f279, 0f00000000;
	add.s32 	%r119, %r18, %r192;
	mul.wide.u32 	%rd28, %r119, 4;
	add.s64 	%rd29, %rd5, %rd28;
	atom.global.add.f32 	%f175, [%rd29], %f54;
	mov.u32 	%r196, %r35;

$L__BB1_36:
	add.ftz.f32 	%f278, %f280, %f279;
	add.s32 	%r188, %r188, -2;
	setp.ne.s32 	%p21, %r188, 0;
	@%p21 bra 	$L__BB1_14;

$L__BB1_37:
	mul.ftz.f32 	%f63, %f19, %f280;
	add.ftz.f32 	%f64, %f24, %f282;
	add.ftz.f32 	%f65, %f25, %f281;
	add.ftz.f32 	%f178, %f29, %f284;
	sub.ftz.f32 	%f179, %f178, %f31;
	mul.ftz.f32 	%f180, %f179, %f32;
	cvt.rzi.ftz.s32.f32 	%r121, %f180;
	min.s32 	%r122, %r121, %r7;
	mul.lo.s32 	%r39, %r122, %r8;
	add.ftz.f32 	%f66, %f23, %f283;
	setp.leu.ftz.f32 	%p22, %f66, 0f00000000;
	mov.u32 	%r200, 0;
	mov.u32 	%r198, %r200;
	@%p22 bra 	$L__BB1_39;

	min.ftz.f32 	%f181, %f66, %f33;
	mul.ftz.f32 	%f182, %f181, %f17;
	cvt.rmi.ftz.s32.f32 	%r198, %f182;

$L__BB1_39:
	setp.leu.ftz.f32 	%p23, %f64, 0f00000000;
	mov.u32 	%r199, %r200;
	@%p23 bra 	$L__BB1_41;

	min.ftz.f32 	%f183, %f64, %f145;
	mul.ftz.f32 	%f184, %f183, %f17;
	cvt.rmi.ftz.s32.f32 	%r199, %f184;

$L__BB1_41:
	setp.leu.ftz.f32 	%p24, %f65, 0f00000000;
	@%p24 bra 	$L__BB1_43;

	min.ftz.f32 	%f185, %f65, %f146;
	mul.ftz.f32 	%f186, %f185, %f17;
	cvt.rmi.ftz.s32.f32 	%r200, %f186;

$L__BB1_43:
	add.s32 	%r125, %r198, %r39;
	mad.lo.s32 	%r126, %r99, %r200, %r125;
	mad.lo.s32 	%r46, %r98, %r199, %r126;
	setp.eq.s32 	%p25, %r46, %r196;
	mov.f32 	%f264, 0f00000000;
	mov.u32 	%r201, %r196;
	@%p25 bra 	$L__BB1_48;

	mul.wide.u32 	%rd30, %r196, 4;
	add.s64 	%rd8, %rd5, %rd30;
	atom.global.add.f32 	%f67, [%rd8], %f278;
	setp.leu.ftz.f32 	%p26, %f67, 0f447A0000;
	mov.f32 	%f278, %f264;
	mov.u32 	%r201, %r46;
	@%p26 bra 	$L__BB1_48;

	neg.ftz.f32 	%f188, %f67;
	atom.global.add.f32 	%f189, [%rd8], %f188;
	setp.lt.ftz.f32 	%p27, %f189, 0f00000000;
	@%p27 bra 	$L__BB1_47;
	bra.uni 	$L__BB1_46;

$L__BB1_47:
	atom.global.add.f32 	%f193, [%rd8], %f67;
	mov.f32 	%f278, %f264;
	mov.u32 	%r201, %r46;
	bra.uni 	$L__BB1_48;

$L__BB1_11:
	ld.const.u64 	%rd67, [gcfg+16];
	mov.u32 	%r201, %r196;
	bra.uni 	$L__BB1_49;

$L__BB1_46:
	add.s32 	%r127, %r18, %r196;
	mul.wide.u32 	%rd31, %r127, 4;
	add.s64 	%rd32, %rd5, %rd31;
	atom.global.add.f32 	%f191, [%rd32], %f67;
	mov.f32 	%f278, %f264;
	mov.u32 	%r201, %r46;

$L__BB1_48:
	ld.const.u64 	%rd67, [gcfg+16];
	add.ftz.f32 	%f280, %f63, %f278;

$L__BB1_49:
	cvta.to.global.u64 	%rd10, %rd67;
	mul.wide.u32 	%rd33, %r201, 4;
	add.s64 	%rd11, %rd10, %rd33;
	atom.global.add.f32 	%f71, [%rd11], %f280;
	setp.leu.ftz.f32 	%p28, %f71, 0f447A0000;
	@%p28 bra 	$L__BB1_53;

	neg.ftz.f32 	%f194, %f71;
	atom.global.add.f32 	%f195, [%rd11], %f194;
	setp.lt.ftz.f32 	%p29, %f195, 0f00000000;
	@%p29 bra 	$L__BB1_52;
	bra.uni 	$L__BB1_51;

$L__BB1_52:
	atom.global.add.f32 	%f197, [%rd11], %f71;
	bra.uni 	$L__BB1_53;

$L__BB1_51:
	ld.const.u32 	%r128, [gcfg+92];
	add.s32 	%r129, %r128, %r201;
	mul.wide.u32 	%rd34, %r129, 4;
	add.s64 	%rd35, %rd10, %rd34;
	atom.global.add.f32 	%f196, [%rd35], %f71;

$L__BB1_53:
	mov.b64 	%rd68, {%r86, %r88};
	add.ftz.f32 	%f198, %f108, 0f38D1B717;
	fma.rn.ftz.f32 	%f299, %f198, %f296, %f1;
	fma.rn.ftz.f32 	%f298, %f198, %f295, %f2;
	fma.rn.ftz.f32 	%f297, %f198, %f294, %f3;
	mul.ftz.f32 	%f199, %f108, %f109;
	mul.ftz.f32 	%f200, %f199, 0fBFB8AA3B;
	ex2.approx.ftz.f32 	%f201, %f200;
	mul.ftz.f32 	%f75, %f201, %f8;
	mul.ftz.f32 	%f202, %f108, 0f2C6AB991;
	fma.rn.ftz.f32 	%f76, %f202, %f112, %f9;
	mul.ftz.f32 	%f203, %f108, %f110;
	sub.ftz.f32 	%f77, %f7, %f203;
	// begin inline asm
	call (%r130), _optix_read_primitive_idx, ();
	// end inline asm
	// begin inline asm
	call (%rd36), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	ld.v2.u64 	{%rd37, %rd38}, [%rd36];
	mul.wide.s32 	%rd41, %r130, 16;
	add.s64 	%rd42, %rd37, %rd41;
	ld.v4.f32 	{%f204, %f205, %f206, %f207}, [%rd42];
	mov.b32 	%r207, %f207;
	mul.wide.s32 	%rd43, %r130, 8;
	add.s64 	%rd44, %rd38, %rd43;
	ld.u64 	%rd71, [%rd44];
	ld.const.u32 	%r131, [gcfg+120];
	setp.eq.s32 	%p30, %r131, 0;
	@%p30 bra 	$L__BB1_60;

	mov.b64 	%rd68, {%r86, %r88};
	mov.u64 	%rd58, gcfg;
	mul.wide.u32 	%rd45, %r207, 16;
	add.s64 	%rd47, %rd58, %rd45;
	ld.const.f32 	%f81, [%rd47+156];
	setp.eq.ftz.f32 	%p31, %f112, %f81;
	@%p31 bra 	$L__BB1_60;

	mov.b64 	%rd68, {%r86, %r88};
	mul.ftz.f32 	%f209, %f205, %f295;
	fma.rn.ftz.f32 	%f210, %f204, %f296, %f209;
	fma.rn.ftz.f32 	%f211, %f206, %f294, %f210;
	abs.ftz.f32 	%f82, %f211;
	mul.ftz.f32 	%f83, %f81, %f81;
	mul.ftz.f32 	%f84, %f112, %f112;
	div.approx.ftz.f32 	%f212, %f84, %f83;
	mul.ftz.f32 	%f213, %f82, %f82;
	mov.f32 	%f214, 0f3F800000;
	sub.ftz.f32 	%f215, %f214, %f213;
	mul.ftz.f32 	%f216, %f212, %f215;
	sub.ftz.f32 	%f85, %f214, %f216;
	setp.leu.ftz.f32 	%p32, %f85, 0f00000000;
	@%p32 bra 	$L__BB1_57;

	mov.b64 	%rd62, {%r86, %r88};
	mov.b64 	%rd48, {%r203, %r204};
	mul.ftz.f32 	%f217, %f84, %f82;
	mul.ftz.f32 	%f218, %f83, %f85;
	fma.rn.ftz.f32 	%f219, %f82, %f217, %f218;
	add.ftz.f32 	%f220, %f112, %f112;
	mul.ftz.f32 	%f221, %f220, %f81;
	mul.ftz.f32 	%f222, %f82, %f221;
	sqrt.approx.ftz.f32 	%f86, %f85;
	mul.ftz.f32 	%f223, %f86, %f222;
	sub.ftz.f32 	%f224, %f219, %f223;
	add.ftz.f32 	%f225, %f219, %f223;
	div.approx.ftz.f32 	%f226, %f224, %f225;
	mul.ftz.f32 	%f227, %f82, %f83;
	mul.ftz.f32 	%f228, %f84, %f86;
	mul.ftz.f32 	%f229, %f86, %f228;
	fma.rn.ftz.f32 	%f230, %f82, %f227, %f229;
	sub.ftz.f32 	%f231, %f230, %f223;
	add.ftz.f32 	%f232, %f230, %f223;
	div.approx.ftz.f32 	%f233, %f231, %f232;
	add.ftz.f32 	%f234, %f226, %f233;
	mul.ftz.f32 	%f235, %f234, 0f3F000000;
	shl.b64 	%rd49, %rd48, 23;
	xor.b64  	%rd50, %rd49, %rd48;
	xor.b64  	%rd51, %rd50, %rd62;
	shr.u64 	%rd52, %rd50, 18;
	xor.b64  	%rd53, %rd51, %rd52;
	shr.u64 	%rd54, %rd62, 5;
	xor.b64  	%rd68, %rd53, %rd54;
	add.s64 	%rd55, %rd68, %rd62;
	cvt.u32.u64 	%r132, %rd55;
	shr.u32 	%r133, %r132, 9;
	or.b32  	%r134, %r133, 1065353216;
	mov.b32 	%f236, %r134;
	add.ftz.f32 	%f237, %f236, 0fBF800000;
	sub.ftz.f32 	%f239, %f214, 0f00000000;
	fma.rn.ftz.f32 	%f240, %f237, %f239, 0f00000000;
	setp.gtu.ftz.f32 	%p33, %f240, %f235;
	mov.u32 	%r203, %r86;
	mov.u32 	%r204, %r88;
	@%p33 bra 	$L__BB1_58;
	bra.uni 	$L__BB1_57;

$L__BB1_58:
	mul.ftz.f32 	%f252, %f204, %f82;
	mul.ftz.f32 	%f253, %f205, %f82;
	mul.ftz.f32 	%f254, %f206, %f82;
	sub.ftz.f32 	%f255, %f296, %f252;
	sub.ftz.f32 	%f256, %f295, %f253;
	sub.ftz.f32 	%f257, %f294, %f254;
	div.approx.ftz.f32 	%f258, %f112, %f81;
	mul.ftz.f32 	%f259, %f255, %f258;
	mul.ftz.f32 	%f260, %f256, %f258;
	mul.ftz.f32 	%f261, %f257, %f258;
	fma.rn.ftz.f32 	%f296, %f204, %f86, %f259;
	fma.rn.ftz.f32 	%f295, %f205, %f86, %f260;
	fma.rn.ftz.f32 	%f294, %f206, %f86, %f261;
	mov.pred 	%p36, -1;
	mov.u32 	%r203, %r86;
	mov.u32 	%r204, %r88;
	bra.uni 	$L__BB1_59;

$L__BB1_57:
	mul.ftz.f32 	%f241, %f82, 0fC0000000;
	mul.ftz.f32 	%f242, %f296, 0f3951B717;
	sub.ftz.f32 	%f299, %f299, %f242;
	mul.ftz.f32 	%f243, %f295, 0f3951B717;
	sub.ftz.f32 	%f298, %f298, %f243;
	mul.ftz.f32 	%f244, %f294, 0f3951B717;
	sub.ftz.f32 	%f297, %f297, %f244;
	fma.rn.ftz.f32 	%f245, %f204, %f241, %f296;
	fma.rn.ftz.f32 	%f246, %f205, %f241, %f295;
	fma.rn.ftz.f32 	%f247, %f206, %f241, %f294;
	mul.ftz.f32 	%f248, %f246, %f246;
	fma.rn.ftz.f32 	%f249, %f245, %f245, %f248;
	fma.rn.ftz.f32 	%f250, %f247, %f247, %f249;
	rsqrt.approx.ftz.f32 	%f251, %f250;
	mul.ftz.f32 	%f296, %f245, %f251;
	mul.ftz.f32 	%f295, %f246, %f251;
	mul.ftz.f32 	%f294, %f247, %f251;
	mov.pred 	%p36, 0;

$L__BB1_59:
	selp.b32 	%r207, %r207, %r76, %p36;
	selp.b64 	%rd71, %rd71, %rd1, %p36;

$L__BB1_60:
	mov.u32 	%r181, 15;
	mov.u32 	%r180, 14;
	mov.u32 	%r179, 9;
	mov.u32 	%r178, 8;
	mov.u32 	%r177, 7;
	mov.u32 	%r176, 6;
	mov.u32 	%r175, 5;
	mov.u32 	%r174, 4;
	mov.u32 	%r173, 3;
	mov.u32 	%r172, 2;
	mov.u32 	%r171, 1;
	mov.u32 	%r170, 13;
	mov.u32 	%r169, 12;
	mov.u32 	%r168, 11;
	mov.u32 	%r167, 10;
	// begin inline asm
	call _optix_set_payload, (%r167, %r204);
	// end inline asm
	mov.u32 	%r143, 0;
	mov.b64 	{%r138, %r140}, %rd68;
	// begin inline asm
	call _optix_set_payload, (%r168, %r138);
	// end inline asm
	// begin inline asm
	call _optix_set_payload, (%r169, %r140);
	// end inline asm
	// begin inline asm
	call _optix_set_payload, (%r170, %r203);
	// end inline asm
	mov.b32 	%r144, %f299;
	// begin inline asm
	call _optix_set_payload, (%r143, %r144);
	// end inline asm
	mov.b32 	%r146, %f298;
	// begin inline asm
	call _optix_set_payload, (%r171, %r146);
	// end inline asm
	mov.b32 	%r148, %f297;
	// begin inline asm
	call _optix_set_payload, (%r172, %r148);
	// end inline asm
	mov.b32 	%r150, %f296;
	// begin inline asm
	call _optix_set_payload, (%r173, %r150);
	// end inline asm
	mov.b32 	%r152, %f295;
	// begin inline asm
	call _optix_set_payload, (%r174, %r152);
	// end inline asm
	mov.b32 	%r154, %f294;
	// begin inline asm
	call _optix_set_payload, (%r175, %r154);
	// end inline asm
	mov.b32 	%r156, %f77;
	// begin inline asm
	call _optix_set_payload, (%r176, %r156);
	// end inline asm
	mov.b32 	%r158, %f75;
	// begin inline asm
	call _optix_set_payload, (%r177, %r158);
	// end inline asm
	mov.b32 	%r160, %f76;
	// begin inline asm
	call _optix_set_payload, (%r178, %r160);
	// end inline asm
	// begin inline asm
	call _optix_set_payload, (%r179, %r207);
	// end inline asm
	shr.u64 	%rd56, %rd71, 32;
	cvt.u32.u64 	%r164, %rd56;
	// begin inline asm
	call _optix_set_payload, (%r180, %r164);
	// end inline asm
	cvt.u32.u64 	%r166, %rd71;
	// begin inline asm
	call _optix_set_payload, (%r181, %r166);
	// end inline asm
	ret;

}
	// .globl	__miss__ms
.visible .entry __miss__ms()
{
	.reg .pred 	%p<36>;
	.reg .f32 	%f<280>;
	.reg .b32 	%r<190>;
	.reg .b64 	%rd<52>;


	mov.u32 	%r173, 0;
	// begin inline asm
	call (%r49), _optix_get_payload, (%r173);
	// end inline asm
	mov.b32 	%f1, %r49;
	mov.u32 	%r52, 1;
	// begin inline asm
	call (%r51), _optix_get_payload, (%r52);
	// end inline asm
	mov.b32 	%f2, %r51;
	mov.u32 	%r54, 2;
	// begin inline asm
	call (%r53), _optix_get_payload, (%r54);
	// end inline asm
	mov.b32 	%f3, %r53;
	mov.u32 	%r56, 3;
	// begin inline asm
	call (%r55), _optix_get_payload, (%r56);
	// end inline asm
	mov.b32 	%f4, %r55;
	mov.u32 	%r58, 4;
	// begin inline asm
	call (%r57), _optix_get_payload, (%r58);
	// end inline asm
	mov.b32 	%f5, %r57;
	mov.u32 	%r60, 5;
	// begin inline asm
	call (%r59), _optix_get_payload, (%r60);
	// end inline asm
	mov.b32 	%f6, %r59;
	mov.u32 	%r62, 6;
	// begin inline asm
	call (%r61), _optix_get_payload, (%r62);
	// end inline asm
	mov.b32 	%f89, %r61;
	mov.u32 	%r64, 7;
	// begin inline asm
	call (%r63), _optix_get_payload, (%r64);
	// end inline asm
	mov.b32 	%f7, %r63;
	mov.u32 	%r66, 8;
	// begin inline asm
	call (%r65), _optix_get_payload, (%r66);
	// end inline asm
	mov.b32 	%f8, %r65;
	mov.u32 	%r68, 9;
	// begin inline asm
	call (%r67), _optix_get_payload, (%r68);
	// end inline asm
	mov.u32 	%r70, 14;
	// begin inline asm
	call (%r69), _optix_get_payload, (%r70);
	// end inline asm
	mov.u32 	%r72, 15;
	// begin inline asm
	call (%r71), _optix_get_payload, (%r72);
	// end inline asm
	mov.u32 	%r74, 10;
	mov.u32 	%r76, 11;
	mov.u32 	%r78, 12;
	// begin inline asm
	call (%r73), _optix_get_payload, (%r74);
	// end inline asm
	// begin inline asm
	call (%r75), _optix_get_payload, (%r76);
	// end inline asm
	// begin inline asm
	call (%r77), _optix_get_payload, (%r78);
	// end inline asm
	mov.u32 	%r80, 13;
	// begin inline asm
	call (%r79), _optix_get_payload, (%r80);
	// end inline asm
	mov.b64 	%rd1, {%r73, %r75};
	mul.wide.u32 	%rd13, %r67, 16;
	mov.u64 	%rd14, gcfg;
	add.s64 	%rd15, %rd14, %rd13;
	ld.const.v4.f32 	{%f90, %f91, %f92, %f93}, [%rd15+144];
	div.approx.ftz.f32 	%f12, %f89, %f91;
	ld.const.f32 	%f13, [gcfg+96];
	mul.ftz.f32 	%f95, %f12, %f13;
	cvt.rzi.ftz.s32.f32 	%r81, %f95;
	shl.b32 	%r175, %r81, 1;
	add.s32 	%r82, %r175, 2;
	cvt.rn.f32.s32 	%f96, %r82;
	div.approx.ftz.f32 	%f14, %f12, %f96;
	mul.ftz.f32 	%f97, %f90, %f14;
	mul.ftz.f32 	%f98, %f97, 0fBFB8AA3B;
	ex2.approx.ftz.f32 	%f15, %f98;
	ld.const.u32 	%r83, [gcfg+124];
	setp.eq.s32 	%p1, %r83, 2;
	@%p1 bra 	$L__BB2_3;
	bra.uni 	$L__BB2_1;

$L__BB2_3:
	mov.f32 	%f103, 0f3F800000;
	sub.ftz.f32 	%f104, %f103, %f15;
	mul.ftz.f32 	%f268, %f104, %f7;
	bra.uni 	$L__BB2_4;

$L__BB2_1:
	setp.eq.ftz.f32 	%p2, %f90, 0f00000000;
	mov.f32 	%f268, 0f00000000;
	@%p2 bra 	$L__BB2_4;

	mov.f32 	%f100, 0f3F800000;
	sub.ftz.f32 	%f101, %f100, %f15;
	mul.ftz.f32 	%f102, %f101, %f7;
	div.approx.ftz.f32 	%f268, %f102, %f90;

$L__BB2_4:
	ld.const.v4.f32 	{%f105, %f106, %f107, %f108}, [gcfg+48];
	sub.ftz.f32 	%f112, %f1, %f105;
	sub.ftz.f32 	%f113, %f2, %f106;
	sub.ftz.f32 	%f114, %f3, %f107;
	mul.ftz.f32 	%f19, %f14, %f4;
	mul.ftz.f32 	%f20, %f14, %f5;
	mul.ftz.f32 	%f21, %f14, %f6;
	fma.rn.ftz.f32 	%f271, %f19, 0f3F000000, %f112;
	fma.rn.ftz.f32 	%f270, %f20, 0f3F000000, %f113;
	fma.rn.ftz.f32 	%f269, %f21, 0f3F000000, %f114;
	mul.ftz.f32 	%f115, %f14, 0f2C6AB991;
	mul.ftz.f32 	%f25, %f93, %f115;
	add.ftz.f32 	%f272, %f25, %f8;
	ld.const.f32 	%f27, [gcfg+100];
	ld.const.f32 	%f28, [gcfg+108];
	ld.const.u32 	%r85, [gcfg+112];
	add.s32 	%r7, %r85, -1;
	ld.const.u32 	%r8, [gcfg+88];
	setp.leu.ftz.f32 	%p3, %f271, 0f00000000;
	mov.u32 	%r171, %r173;
	@%p3 bra 	$L__BB2_6;

	ld.const.f32 	%f116, [gcfg+60];
	min.ftz.f32 	%f117, %f271, %f116;
	mul.ftz.f32 	%f118, %f117, %f13;
	cvt.rmi.ftz.s32.f32 	%r171, %f118;

$L__BB2_6:
	setp.leu.ftz.f32 	%p4, %f270, 0f00000000;
	mov.u32 	%r172, %r173;
	@%p4 bra 	$L__BB2_8;

	ld.const.f32 	%f119, [gcfg+64];
	min.ftz.f32 	%f120, %f270, %f119;
	mul.ftz.f32 	%f121, %f120, %f13;
	cvt.rmi.ftz.s32.f32 	%r172, %f121;

$L__BB2_8:
	setp.leu.ftz.f32 	%p5, %f269, 0f00000000;
	@%p5 bra 	$L__BB2_10;

	ld.const.f32 	%f122, [gcfg+68];
	min.ftz.f32 	%f123, %f269, %f122;
	mul.ftz.f32 	%f124, %f123, %f13;
	cvt.rmi.ftz.s32.f32 	%r173, %f124;

$L__BB2_10:
	sub.ftz.f32 	%f125, %f272, %f27;
	mul.ftz.f32 	%f126, %f125, %f28;
	cvt.rzi.ftz.s32.f32 	%r88, %f126;
	ld.const.v2.u32 	{%r89, %r90}, [gcfg+80];
	min.s32 	%r91, %r88, %r7;
	mad.lo.s32 	%r92, %r91, %r8, %r171;
	mad.lo.s32 	%r93, %r90, %r173, %r92;
	mad.lo.s32 	%r183, %r89, %r172, %r93;
	setp.gt.s32 	%p6, %r82, 1;
	@%p6 bra 	$L__BB2_12;
	bra.uni 	$L__BB2_11;

$L__BB2_12:
	ld.const.f32 	%f29, [gcfg+60];
	ld.const.v2.f32 	{%f127, %f128}, [gcfg+64];
	ld.const.u64 	%rd51, [gcfg+16];
	cvta.to.global.u64 	%rd4, %rd51;
	ld.const.u32 	%r18, [gcfg+92];
	setp.eq.s32 	%p7, %r175, 0;
	mov.f32 	%f266, %f268;
	@%p7 bra 	$L__BB2_37;

	mov.u32 	%r95, 0;
	mov.f32 	%f266, %f268;

$L__BB2_14:
	add.ftz.f32 	%f38, %f20, %f270;
	add.ftz.f32 	%f39, %f21, %f269;
	add.ftz.f32 	%f40, %f25, %f272;
	add.ftz.f32 	%f41, %f19, %f271;
	setp.leu.ftz.f32 	%p8, %f41, 0f00000000;
	mov.u32 	%r176, %r95;
	@%p8 bra 	$L__BB2_16;

	min.ftz.f32 	%f129, %f41, %f29;
	mul.ftz.f32 	%f130, %f129, %f13;
	cvt.rmi.ftz.s32.f32 	%r176, %f130;

$L__BB2_16:
	setp.leu.ftz.f32 	%p9, %f38, 0f00000000;
	mov.u32 	%r177, %r95;
	@%p9 bra 	$L__BB2_18;

	min.ftz.f32 	%f131, %f38, %f127;
	mul.ftz.f32 	%f132, %f131, %f13;
	cvt.rmi.ftz.s32.f32 	%r177, %f132;

$L__BB2_18:
	setp.leu.ftz.f32 	%p10, %f39, 0f00000000;
	mov.u32 	%r178, %r95;
	@%p10 bra 	$L__BB2_20;

	min.ftz.f32 	%f133, %f39, %f128;
	mul.ftz.f32 	%f134, %f133, %f13;
	cvt.rmi.ftz.s32.f32 	%r178, %f134;

$L__BB2_20:
	sub.ftz.f32 	%f135, %f40, %f27;
	mul.ftz.f32 	%f136, %f135, %f28;
	cvt.rzi.ftz.s32.f32 	%r98, %f136;
	min.s32 	%r99, %r98, %r7;
	mad.lo.s32 	%r100, %r99, %r8, %r176;
	mad.lo.s32 	%r101, %r90, %r178, %r100;
	mad.lo.s32 	%r27, %r89, %r177, %r101;
	setp.eq.s32 	%p11, %r27, %r183;
	mov.f32 	%f256, 0f00000000;
	mov.u32 	%r179, %r183;
	@%p11 bra 	$L__BB2_25;

	mul.wide.u32 	%rd16, %r183, 4;
	add.s64 	%rd5, %rd4, %rd16;
	atom.global.add.f32 	%f42, [%rd5], %f266;
	setp.leu.ftz.f32 	%p12, %f42, 0f447A0000;
	mov.f32 	%f266, %f256;
	mov.u32 	%r179, %r27;
	@%p12 bra 	$L__BB2_25;

	neg.ftz.f32 	%f138, %f42;
	atom.global.add.f32 	%f139, [%rd5], %f138;
	setp.lt.ftz.f32 	%p13, %f139, 0f00000000;
	@%p13 bra 	$L__BB2_24;
	bra.uni 	$L__BB2_23;

$L__BB2_24:
	atom.global.add.f32 	%f143, [%rd5], %f42;
	mov.f32 	%f266, %f256;
	mov.u32 	%r179, %r27;
	bra.uni 	$L__BB2_25;

$L__BB2_23:
	add.s32 	%r102, %r18, %r183;
	mul.wide.u32 	%rd17, %r102, 4;
	add.s64 	%rd18, %rd4, %rd17;
	atom.global.add.f32 	%f141, [%rd18], %f42;
	mov.f32 	%f266, %f256;
	mov.u32 	%r179, %r27;

$L__BB2_25:
	mul.ftz.f32 	%f144, %f15, %f268;
	add.ftz.f32 	%f267, %f144, %f266;
	mul.ftz.f32 	%f268, %f15, %f144;
	add.ftz.f32 	%f270, %f20, %f38;
	add.ftz.f32 	%f269, %f21, %f39;
	add.ftz.f32 	%f272, %f25, %f40;
	add.ftz.f32 	%f271, %f19, %f41;
	setp.leu.ftz.f32 	%p14, %f271, 0f00000000;
	mov.u32 	%r182, 0;
	mov.u32 	%r180, %r182;
	@%p14 bra 	$L__BB2_27;

	min.ftz.f32 	%f145, %f271, %f29;
	mul.ftz.f32 	%f146, %f145, %f13;
	cvt.rmi.ftz.s32.f32 	%r180, %f146;

$L__BB2_27:
	setp.leu.ftz.f32 	%p15, %f270, 0f00000000;
	mov.u32 	%r181, %r182;
	@%p15 bra 	$L__BB2_29;

	min.ftz.f32 	%f147, %f270, %f127;
	mul.ftz.f32 	%f148, %f147, %f13;
	cvt.rmi.ftz.s32.f32 	%r181, %f148;

$L__BB2_29:
	setp.leu.ftz.f32 	%p16, %f269, 0f00000000;
	@%p16 bra 	$L__BB2_31;

	min.ftz.f32 	%f149, %f269, %f128;
	mul.ftz.f32 	%f150, %f149, %f13;
	cvt.rmi.ftz.s32.f32 	%r182, %f150;

$L__BB2_31:
	sub.ftz.f32 	%f151, %f272, %f27;
	mul.ftz.f32 	%f152, %f151, %f28;
	cvt.rzi.ftz.s32.f32 	%r106, %f152;
	min.s32 	%r107, %r106, %r7;
	mad.lo.s32 	%r108, %r107, %r8, %r180;
	mad.lo.s32 	%r109, %r90, %r182, %r108;
	mad.lo.s32 	%r35, %r89, %r181, %r109;
	setp.eq.s32 	%p17, %r35, %r179;
	mov.f32 	%f257, 0f00000000;
	mov.u32 	%r183, %r179;
	@%p17 bra 	$L__BB2_36;

	mul.wide.u32 	%rd19, %r179, 4;
	add.s64 	%rd6, %rd4, %rd19;
	atom.global.add.f32 	%f50, [%rd6], %f267;
	setp.leu.ftz.f32 	%p18, %f50, 0f447A0000;
	mov.f32 	%f267, %f257;
	mov.u32 	%r183, %r35;
	@%p18 bra 	$L__BB2_36;

	neg.ftz.f32 	%f154, %f50;
	atom.global.add.f32 	%f155, [%rd6], %f154;
	setp.lt.ftz.f32 	%p19, %f155, 0f00000000;
	@%p19 bra 	$L__BB2_35;
	bra.uni 	$L__BB2_34;

$L__BB2_35:
	atom.global.add.f32 	%f159, [%rd6], %f50;
	mov.f32 	%f267, %f257;
	mov.u32 	%r183, %r35;
	bra.uni 	$L__BB2_36;

$L__BB2_34:
	add.s32 	%r110, %r18, %r179;
	mul.wide.u32 	%rd20, %r110, 4;
	add.s64 	%rd21, %rd4, %rd20;
	atom.global.add.f32 	%f157, [%rd21], %f50;
	mov.f32 	%f267, %f257;
	mov.u32 	%r183, %r35;

$L__BB2_36:
	add.ftz.f32 	%f266, %f268, %f267;
	add.s32 	%r175, %r175, -2;
	setp.ne.s32 	%p20, %r175, 0;
	@%p20 bra 	$L__BB2_14;

$L__BB2_37:
	mul.ftz.f32 	%f59, %f15, %f268;
	add.ftz.f32 	%f60, %f20, %f270;
	add.ftz.f32 	%f61, %f21, %f269;
	add.ftz.f32 	%f160, %f25, %f272;
	sub.ftz.f32 	%f161, %f160, %f27;
	mul.ftz.f32 	%f162, %f161, %f28;
	cvt.rzi.ftz.s32.f32 	%r112, %f162;
	min.s32 	%r113, %r112, %r7;
	mul.lo.s32 	%r39, %r113, %r8;
	add.ftz.f32 	%f62, %f19, %f271;
	setp.leu.ftz.f32 	%p21, %f62, 0f00000000;
	mov.u32 	%r187, 0;
	mov.u32 	%r185, %r187;
	@%p21 bra 	$L__BB2_39;

	min.ftz.f32 	%f163, %f62, %f29;
	mul.ftz.f32 	%f164, %f163, %f13;
	cvt.rmi.ftz.s32.f32 	%r185, %f164;

$L__BB2_39:
	setp.leu.ftz.f32 	%p22, %f60, 0f00000000;
	mov.u32 	%r186, %r187;
	@%p22 bra 	$L__BB2_41;

	min.ftz.f32 	%f165, %f60, %f127;
	mul.ftz.f32 	%f166, %f165, %f13;
	cvt.rmi.ftz.s32.f32 	%r186, %f166;

$L__BB2_41:
	setp.leu.ftz.f32 	%p23, %f61, 0f00000000;
	@%p23 bra 	$L__BB2_43;

	min.ftz.f32 	%f167, %f61, %f128;
	mul.ftz.f32 	%f168, %f167, %f13;
	cvt.rmi.ftz.s32.f32 	%r187, %f168;

$L__BB2_43:
	add.s32 	%r116, %r185, %r39;
	mad.lo.s32 	%r117, %r90, %r187, %r116;
	mad.lo.s32 	%r46, %r89, %r186, %r117;
	setp.eq.s32 	%p24, %r46, %r183;
	mov.f32 	%f258, 0f00000000;
	mov.u32 	%r188, %r183;
	@%p24 bra 	$L__BB2_48;

	mul.wide.u32 	%rd22, %r183, 4;
	add.s64 	%rd7, %rd4, %rd22;
	atom.global.add.f32 	%f63, [%rd7], %f266;
	setp.leu.ftz.f32 	%p25, %f63, 0f447A0000;
	mov.f32 	%f266, %f258;
	mov.u32 	%r188, %r46;
	@%p25 bra 	$L__BB2_48;

	neg.ftz.f32 	%f170, %f63;
	atom.global.add.f32 	%f171, [%rd7], %f170;
	setp.lt.ftz.f32 	%p26, %f171, 0f00000000;
	@%p26 bra 	$L__BB2_47;
	bra.uni 	$L__BB2_46;

$L__BB2_47:
	atom.global.add.f32 	%f175, [%rd7], %f63;
	mov.f32 	%f266, %f258;
	mov.u32 	%r188, %r46;
	bra.uni 	$L__BB2_48;

$L__BB2_11:
	ld.const.u64 	%rd51, [gcfg+16];
	mov.u32 	%r188, %r183;
	bra.uni 	$L__BB2_49;

$L__BB2_46:
	add.s32 	%r118, %r18, %r183;
	mul.wide.u32 	%rd23, %r118, 4;
	add.s64 	%rd24, %rd4, %rd23;
	atom.global.add.f32 	%f173, [%rd24], %f63;
	mov.f32 	%f266, %f258;
	mov.u32 	%r188, %r46;

$L__BB2_48:
	add.ftz.f32 	%f268, %f59, %f266;

$L__BB2_49:
	cvta.to.global.u64 	%rd9, %rd51;
	mul.wide.u32 	%rd25, %r188, 4;
	add.s64 	%rd10, %rd9, %rd25;
	atom.global.add.f32 	%f67, [%rd10], %f268;
	setp.leu.ftz.f32 	%p27, %f67, 0f447A0000;
	@%p27 bra 	$L__BB2_53;

	neg.ftz.f32 	%f176, %f67;
	atom.global.add.f32 	%f177, [%rd10], %f176;
	setp.lt.ftz.f32 	%p28, %f177, 0f00000000;
	@%p28 bra 	$L__BB2_52;
	bra.uni 	$L__BB2_51;

$L__BB2_52:
	atom.global.add.f32 	%f179, [%rd10], %f67;
	bra.uni 	$L__BB2_53;

$L__BB2_51:
	ld.const.u32 	%r119, [gcfg+92];
	add.s32 	%r120, %r119, %r188;
	mul.wide.u32 	%rd26, %r120, 4;
	add.s64 	%rd27, %rd9, %rd26;
	atom.global.add.f32 	%f178, [%rd27], %f67;

$L__BB2_53:
	mov.b64 	%rd28, {%r77, %r79};
	fma.rn.ftz.f32 	%f68, %f12, %f4, %f1;
	fma.rn.ftz.f32 	%f69, %f12, %f5, %f2;
	fma.rn.ftz.f32 	%f70, %f12, %f6, %f3;
	mul.ftz.f32 	%f180, %f90, %f12;
	mul.ftz.f32 	%f181, %f180, 0fBFB8AA3B;
	ex2.approx.ftz.f32 	%f182, %f181;
	mul.ftz.f32 	%f71, %f182, %f7;
	mul.ftz.f32 	%f183, %f12, 0f2C6AB991;
	fma.rn.ftz.f32 	%f72, %f93, %f183, %f8;
	shl.b64 	%rd29, %rd1, 23;
	xor.b64  	%rd30, %rd29, %rd1;
	xor.b64  	%rd31, %rd30, %rd28;
	shr.u64 	%rd32, %rd30, 18;
	xor.b64  	%rd33, %rd31, %rd32;
	shr.u64 	%rd34, %rd28, 5;
	xor.b64  	%rd11, %rd33, %rd34;
	add.s64 	%rd35, %rd11, %rd28;
	cvt.u32.u64 	%r121, %rd35;
	shr.u32 	%r122, %r121, 9;
	or.b32  	%r123, %r122, 1065353216;
	mov.b32 	%f184, %r123;
	add.ftz.f32 	%f185, %f184, 0fBF800000;
	mov.f32 	%f186, 0f3F800000;
	mov.f32 	%f187, 0f40C90FDB;
	sub.ftz.f32 	%f188, %f187, 0f00000000;
	fma.rn.ftz.f32 	%f189, %f185, %f188, 0f00000000;
	sin.approx.ftz.f32 	%f73, %f189;
	cos.approx.ftz.f32 	%f74, %f189;
	abs.ftz.f32 	%f190, %f92;
	setp.gt.ftz.f32 	%p29, %f190, 0f34000000;
	shl.b64 	%rd36, %rd28, 23;
	xor.b64  	%rd37, %rd36, %rd28;
	xor.b64  	%rd38, %rd11, %rd37;
	shr.u64 	%rd39, %rd37, 18;
	xor.b64  	%rd40, %rd38, %rd39;
	shr.u64 	%rd41, %rd11, 5;
	xor.b64  	%rd12, %rd40, %rd41;
	add.s64 	%rd42, %rd12, %rd11;
	cvt.u32.u64 	%r124, %rd42;
	shr.u32 	%r125, %r124, 9;
	or.b32  	%r126, %r125, 1065353216;
	mov.b32 	%f191, %r126;
	add.ftz.f32 	%f192, %f191, 0fBF800000;
	sub.ftz.f32 	%f193, %f186, 0f00000000;
	fma.rn.ftz.f32 	%f75, %f192, %f193, 0f00000000;
	@%p29 bra 	$L__BB2_55;
	bra.uni 	$L__BB2_54;

$L__BB2_55:
	mul.ftz.f32 	%f194, %f92, %f92;
	sub.ftz.f32 	%f196, %f186, %f194;
	add.ftz.f32 	%f197, %f92, %f92;
	sub.ftz.f32 	%f198, %f186, %f92;
	fma.rn.ftz.f32 	%f199, %f197, %f75, %f198;
	div.approx.ftz.f32 	%f200, %f196, %f199;
	mul.ftz.f32 	%f201, %f200, %f200;
	add.ftz.f32 	%f202, %f194, 0f3F800000;
	sub.ftz.f32 	%f203, %f202, %f201;
	div.approx.ftz.f32 	%f204, %f203, %f197;
	min.ftz.f32 	%f205, %f186, %f204;
	mov.f32 	%f206, 0fBF800000;
	max.ftz.f32 	%f276, %f206, %f205;
	bra.uni 	$L__BB2_56;

$L__BB2_54:
	fma.rn.ftz.f32 	%f276, %f75, 0f40000000, 0fBF800000;

$L__BB2_56:
	abs.ftz.f32 	%f207, %f276;
	sub.ftz.f32 	%f209, %f186, %f207;
	mul.ftz.f32 	%f210, %f209, 0f3F000000;
	sqrt.approx.ftz.f32 	%f211, %f210;
	setp.gt.ftz.f32 	%p30, %f207, 0f3F11EB85;
	selp.f32 	%f212, %f211, %f207, %p30;
	mul.ftz.f32 	%f213, %f212, %f212;
	mov.f32 	%f214, 0f3C94D2E9;
	mov.f32 	%f215, 0f3D53F941;
	fma.rn.ftz.f32 	%f216, %f215, %f213, %f214;
	mov.f32 	%f217, 0f3D3F841F;
	fma.rn.ftz.f32 	%f218, %f216, %f213, %f217;
	mov.f32 	%f219, 0f3D994929;
	fma.rn.ftz.f32 	%f220, %f218, %f213, %f219;
	mov.f32 	%f221, 0f3E2AAB94;
	fma.rn.ftz.f32 	%f222, %f220, %f213, %f221;
	mul.ftz.f32 	%f223, %f213, %f222;
	fma.rn.ftz.f32 	%f224, %f223, %f212, %f212;
	add.ftz.f32 	%f225, %f224, %f224;
	mov.f32 	%f226, 0f3FC90FDB;
	sub.ftz.f32 	%f227, %f226, %f224;
	selp.f32 	%f228, %f225, %f227, %p30;
	mov.f32 	%f229, 0f40490FDB;
	sub.ftz.f32 	%f230, %f229, %f228;
	setp.lt.ftz.f32 	%p31, %f276, 0f00000000;
	selp.f32 	%f231, %f230, %f228, %p31;
	sin.approx.ftz.f32 	%f79, %f231;
	setp.lt.ftz.f32 	%p32, %f6, 0f3F7FFFFE;
	setp.gt.ftz.f32 	%p33, %f6, 0fBF7FFFFE;
	and.pred  	%p34, %p33, %p32;
	@%p34 bra 	$L__BB2_58;
	bra.uni 	$L__BB2_57;

$L__BB2_58:
	mul.ftz.f32 	%f233, %f6, %f6;
	sub.ftz.f32 	%f235, %f186, %f233;
	rsqrt.approx.ftz.f32 	%f236, %f235;
	mul.ftz.f32 	%f237, %f79, %f236;
	mul.ftz.f32 	%f238, %f235, %f74;
	mul.ftz.f32 	%f239, %f74, %f4;
	mul.ftz.f32 	%f240, %f239, %f6;
	mul.ftz.f32 	%f241, %f74, %f5;
	mul.ftz.f32 	%f242, %f241, %f6;
	mul.ftz.f32 	%f243, %f73, %f5;
	sub.ftz.f32 	%f244, %f240, %f243;
	fma.rn.ftz.f32 	%f245, %f73, %f4, %f242;
	mul.ftz.f32 	%f246, %f73, 0f00000000;
	sub.ftz.f32 	%f247, %f246, %f238;
	mul.ftz.f32 	%f248, %f244, %f237;
	mul.ftz.f32 	%f249, %f245, %f237;
	mul.ftz.f32 	%f250, %f247, %f237;
	fma.rn.ftz.f32 	%f279, %f276, %f6, %f250;
	fma.rn.ftz.f32 	%f278, %f276, %f5, %f249;
	fma.rn.ftz.f32 	%f277, %f276, %f4, %f248;
	bra.uni 	$L__BB2_59;

$L__BB2_57:
	neg.ftz.f32 	%f232, %f276;
	setp.gt.ftz.f32 	%p35, %f6, 0f00000000;
	selp.f32 	%f279, %f276, %f232, %p35;
	mul.ftz.f32 	%f278, %f73, %f79;
	mul.ftz.f32 	%f277, %f74, %f79;

$L__BB2_59:
	mov.u32 	%r170, 5;
	mov.u32 	%r169, 4;
	mov.u32 	%r168, 3;
	mov.u32 	%r167, 2;
	mov.u32 	%r166, 1;
	mov.u32 	%r165, 13;
	mov.u32 	%r164, 12;
	mov.u32 	%r163, 11;
	mov.u32 	%r162, 10;
	shl.b64 	%rd43, %rd11, 23;
	xor.b64  	%rd44, %rd43, %rd11;
	xor.b64  	%rd45, %rd12, %rd44;
	shr.u64 	%rd46, %rd44, 18;
	xor.b64  	%rd47, %rd45, %rd46;
	shr.u64 	%rd48, %rd12, 5;
	xor.b64  	%rd49, %rd47, %rd48;
	add.s64 	%rd50, %rd49, %rd12;
	cvt.u32.u64 	%r159, %rd50;
	mov.u32 	%r135, 0;
	shr.u32 	%r160, %r159, 9;
	or.b32  	%r161, %r160, 1065353216;
	mov.b32 	%f251, %r161;
	add.ftz.f32 	%f252, %f251, 0fBF800000;
	add.ftz.f32 	%f253, %f252, 0f34000000;
	lg2.approx.ftz.f32 	%f254, %f253;
	mul.ftz.f32 	%f255, %f254, 0fBF317218;
	mov.b64 	{%r134, %r128}, %rd12;
	// begin inline asm
	call _optix_set_payload, (%r162, %r128);
	// end inline asm
	mov.b64 	{%r130, %r132}, %rd49;
	// begin inline asm
	call _optix_set_payload, (%r163, %r130);
	// end inline asm
	// begin inline asm
	call _optix_set_payload, (%r164, %r132);
	// end inline asm
	// begin inline asm
	call _optix_set_payload, (%r165, %r134);
	// end inline asm
	mov.b32 	%r136, %f68;
	// begin inline asm
	call _optix_set_payload, (%r135, %r136);
	// end inline asm
	mov.b32 	%r138, %f69;
	// begin inline asm
	call _optix_set_payload, (%r166, %r138);
	// end inline asm
	mov.b32 	%r140, %f70;
	// begin inline asm
	call _optix_set_payload, (%r167, %r140);
	// end inline asm
	mov.b32 	%r142, %f277;
	// begin inline asm
	call _optix_set_payload, (%r168, %r142);
	// end inline asm
	mov.b32 	%r144, %f278;
	// begin inline asm
	call _optix_set_payload, (%r169, %r144);
	// end inline asm
	mov.b32 	%r146, %f279;
	// begin inline asm
	call _optix_set_payload, (%r170, %r146);
	// end inline asm
	mov.b32 	%r148, %f255;
	// begin inline asm
	call _optix_set_payload, (%r62, %r148);
	// end inline asm
	mov.b32 	%r150, %f71;
	// begin inline asm
	call _optix_set_payload, (%r64, %r150);
	// end inline asm
	mov.b32 	%r152, %f72;
	// begin inline asm
	call _optix_set_payload, (%r66, %r152);
	// end inline asm
	// begin inline asm
	call _optix_set_payload, (%r68, %r67);
	// end inline asm
	// begin inline asm
	call _optix_set_payload, (%r70, %r69);
	// end inline asm
	// begin inline asm
	call _optix_set_payload, (%r72, %r71);
	// end inline asm
	ret;

}

